{
    "sourceFile": "lib/data/repository/classified_repo.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667569434860,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667569434860,
            "name": "Commit-0",
            "content": "import 'dart:convert';\n\nimport 'package:ainsighter/data/datasource/remote/dio/dio_client.dart';\nimport 'package:ainsighter/data/datasource/remote/exception/api_error_handler.dart';\nimport 'package:ainsighter/data/model/response/base/api_response.dart';\nimport 'package:ainsighter/utill/app_constants.dart';\nimport 'package:dio/dio.dart';\nimport 'package:flutter/material.dart';\n\nclass ClassifiedRepo {\n  final DioClient dioClient;\n  ClassifiedRepo({@required this.dioClient});\n\n  Future<ApiResponse> getClassifieds(int pageKey,\n      {cityId,\n      districtIds,\n      neighborhoodIds,\n      usageStatusIds,\n      landStatusIds,\n      categoryIds,\n      minPrice,\n      maxPrice,\n      featured,\n      urgent,\n      keyword}) async {\n    try {\n      final response = await dioClient.post(AppConstants.ClASSIFIED_URI, data: {\n        'skip': pageKey,\n        'city_id': cityId,\n        'district_ids': districtIds,\n        'neighborhood_ids': neighborhoodIds,\n        'usage_status_ids': usageStatusIds,\n        'category_ids': categoryIds,\n        'min_price': minPrice,\n        'max_price': maxPrice,\n        'featured': featured,\n        'urgent': urgent,\n        'keyword': keyword\n      });\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> getFavouriteClassifieds(\n    int pageKey,\n  ) async {\n    try {\n      final response = await dioClient\n          .post(AppConstants.FAVOURITE_CLASSIFIED_LIST_URI, data: {\n        'skip': pageKey,\n      });\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> getMyAffiliateLinks() async {\n    try {\n      final response =\n          await dioClient.post(AppConstants.GET_MY_AFFILIATE_LINKS_URI);\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> getFilteredClassifieds(int pageKey, cityIds) async {\n    try {\n      final response = await dioClient.post(AppConstants.ClASSIFIED_URI,\n          data: {'skip': pageKey, 'city_ids': cityIds});\n      print('1BASARILI');\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      print('1hata');\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> uploadImage(FormData formData) async {\n    try {\n      final response =\n          await dioClient.post(AppConstants.UPLOAD_IMAGE_URI, data: formData);\n      print('1BASARILI');\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      print('1hata');\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> generateAffiliateLink(int classifiedId) async {\n    try {\n      final response = await dioClient.post(\n          AppConstants.GENERATE_AFFILIATE_LINK_URI,\n          data: {'classified_id': classifiedId});\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> getClassifiedsByUser(int userId) async {\n    try {\n      final response =\n          await dioClient.get('${AppConstants.ClASSIFIED_BY_USER_URI}$userId');\n      print('1BASARILI');\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      print('1hata');\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> getClassifiedById(int classifiedId) async {\n    try {\n      final response = await dioClient\n          .get('${AppConstants.ClASSIFIED_BY_ID_URI}$classifiedId');\n      print('1BASARILI');\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      print('1hata');\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> getClassifiedsByMe() async {\n    try {\n      final response =\n          await dioClient.get('${AppConstants.ClASSIFIED_BY_ME_URI}');\n      print('1BASARILI');\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      print('1hata');\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> createClassified(\n      {String title,\n      String description,\n      List images,\n      double price,\n      int categoryId,\n      int usageStatusId,\n      int cityId,\n      int districtId,\n      int neighborhoodId}) async {\n    try {\n      final response = await dioClient\n          .post(AppConstants.ClASSIFIED_CREATEClASSIFIED_URI, data: {\n        'title': title,\n        'description': description,\n        'images': images.isNotEmpty ? json.encode(images) : null,\n        'price': price,\n        'category_id': categoryId,\n        'usage_status_id': usageStatusId,\n        'city_id': cityId,\n        'district_id': districtId,\n        'neighborhood_id': neighborhoodId\n      });\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> updateClassified(\n      {int classifiedId,\n      String title,\n      String description,\n      List images,\n      double price,\n      int categoryId,\n      int usageStatusId,\n      int cityId,\n      int districtId,\n      int neighborhoodId}) async {\n    try {\n      final response = await dioClient\n          .post(AppConstants.ClASSIFIED_UPDATEClASSIFIED_URI, data: {\n        'classified_id': classifiedId,\n        'title': title,\n        'description': description,\n        'images': images.isNotEmpty ? json.encode(images) : null,\n        'price': price,\n        'category_id': categoryId,\n        'usage_status_id': usageStatusId,\n        'city_id': cityId,\n        'district_id': districtId,\n        'neighborhood_id': neighborhoodId\n      });\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> deleteClassified({int classifiedId}) async {\n    try {\n      // final response =\n      //     await dioClient.delete(AppConstants.POST_CREATE_COMMENT_URI, data: {\n      //   'classified_id': classifiedId,\n      // });\n      // return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n\n  Future<ApiResponse> favouriteClassified(int classifiedId) async {\n    try {\n      final response = await dioClient.post(\n          AppConstants.FAVOURITE_CLASSIFIED_URI,\n          data: {'classified_id': classifiedId});\n      return ApiResponse.withSuccess(response);\n    } catch (e) {\n      return ApiResponse.withError(ApiErrorHandler.getMessage(e));\n    }\n  }\n}\n"
        }
    ]
}