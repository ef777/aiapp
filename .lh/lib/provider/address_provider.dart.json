{
    "sourceFile": "lib/provider/address_provider.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667569434854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667569434854,
            "name": "Commit-0",
            "content": "import 'package:ainsighter/data/model/response/base/api_response.dart';\nimport 'package:ainsighter/data/model/response/category_model.dart';\nimport 'package:ainsighter/data/repository/address_repo.dart';\nimport 'package:ainsighter/helper/api_checker.dart';\nimport 'package:flutter/material.dart';\nimport 'package:selectify/selectify.dart';\n\nclass AddressProvider extends ChangeNotifier {\n  final AddressRepo addressRepo;\n\n  AddressProvider({@required this.addressRepo});\n\n  List _cityList = [];\n  List _districtList = [];\n  List _neighborhoodList = [];\n  int _selectedCityId;\n  int _selectedDistrictId;\n  int _selectedNeighborhoodId;\n  int _filterIndex = -1;\n  int _filterType = 0;\n\n  List get cityList => _cityList;\n  List get districtList => _districtList;\n  List get neighborhoodList => _neighborhoodList;\n  int get selectedCityId => _selectedCityId;\n  int get selectedDistrictId => _selectedDistrictId;\n  int get selectedNeighborhoodId => _selectedNeighborhoodId;\n\n  int get filterIndex => _filterIndex;\n  int get filterType => _filterType;\n\n  List<CategoryModel> _categoryList;\n  List<CategoryModel> _subCategoryList = [];\n  CategoryModel _categoryModel;\n\n  List<CategoryModel> get categoryList => _categoryList;\n  List<CategoryModel> get subCategoryList => _subCategoryList;\n  CategoryModel get categoryModel => _categoryModel;\n\n  Future<List<S2Choice<int>>> getCityList(BuildContext context) async {\n    ApiResponse apiResponse = await addressRepo.getCityList();\n    return S2Choice.listFrom<int, dynamic>(\n      source: apiResponse.response.data,\n      value: (index, item) => item['sehir_key'],\n      title: (index, item) => item['sehir_title'],\n      meta: (index, item) => item,\n    );\n  }\n\n  Future<List<S2Choice<int>>> getDistrictList(\n      BuildContext context, int cityID) async {\n    _districtList = [];\n\n    ApiResponse apiResponse = await addressRepo.getDistrictList(cityID);\n\n    return S2Choice.listFrom<int, dynamic>(\n      source: apiResponse.response.data,\n      value: (index, item) => item['ilce_key'],\n      title: (index, item) => item['ilce_title'],\n      meta: (index, item) => item,\n    );\n  }\n\n  Future<List<S2Choice<int>>> getNeighborhoodList(\n      BuildContext context, List<int> districtIds) async {\n    _neighborhoodList = [];\n\n    try {\n      ApiResponse apiResponse =\n          await addressRepo.getNeighborhoodList(districtIds);\n\n      return S2Choice.listFrom<int, dynamic>(\n        source: apiResponse.response.data,\n        value: (index, item) => item['mahalle_key'],\n        title: (index, item) => item['mahalle_title'],\n        group: (index, item) => item['mahalle_ilce_title'],\n        meta: (index, item) => item,\n      );\n    } catch (e) {\n      print('solam ' + e.toString());\n    }\n  }\n\n  Future<List<S2Choice<int>>> getNeighborhoodListByDistrict(\n      BuildContext context, int districtId) async {\n    _neighborhoodList = [];\n\n    try {\n      ApiResponse apiResponse =\n          await addressRepo.getNeighborhoodListByDistrict(districtId);\n\n      return S2Choice.listFrom<int, dynamic>(\n        source: apiResponse.response.data,\n        value: (index, item) => item['mahalle_key'],\n        title: (index, item) => item['mahalle_title'],\n        meta: (index, item) => item,\n      );\n    } catch (e) {\n      print('solam ' + e.toString());\n    }\n  }\n\n  // void getCategory(int id, BuildContext context) async {\n  //   if (_categoryList == null) {\n  //     await getCategoryList(context, true);\n  //     _categoryModel =\n  //         _categoryList.firstWhere((category) => category.id == id);\n  //     notifyListeners();\n  //   } else {\n  //     _categoryModel =\n  //         _categoryList.firstWhere((category) => category.id == id);\n  //   }\n  // }\n  //\n  // void getSubCategoryList(BuildContext context, String categoryID) async {\n  //   _subCategoryList = null;\n  //\n  //   ApiResponse apiResponse = await categoryRepo.getSubCategoryList(categoryID);\n  //   if (apiResponse.response != null &&\n  //       apiResponse.response.statusCode == 200) {\n  //     _subCategoryList = [];\n  //     apiResponse.response.data.forEach(\n  //         (category) => _subCategoryList.add(CategoryModel.fromJson(category)));\n  //     getCategoryProductList(context, categoryID);\n  //   } else {\n  //     ApiChecker.checkApi(context, apiResponse);\n  //   }\n  //   notifyListeners();\n  // }\n  //\n  // void getCategoryProductList(BuildContext context, String categoryID) async {\n  //   _categoryProductList = [];\n  //\n  //   ApiResponse apiResponse =\n  //       await categoryRepo.getCategoryProductList(categoryID);\n  //   if (apiResponse.response != null &&\n  //       apiResponse.response.statusCode == 200) {\n  //     _categoryProductList = [];\n  //     apiResponse.response.data.forEach(\n  //         (category) => _categoryProductList.add(Product.fromJson(category)));\n  //     _categoryAllProductList.addAll(_categoryProductList);\n  //   } else {\n  //     ApiChecker.checkApi(context, apiResponse);\n  //   }\n  //   notifyListeners();\n  // }\n\n  int _selectCategory = -1;\n\n  int get selectCategory => _selectCategory;\n\n  updateSelectedCity(int id) {\n    _selectedCityId = id;\n    _selectedDistrictId = null;\n    _selectedNeighborhoodId = null;\n    notifyListeners();\n  }\n\n  updateSelectedDistrict(int id) {\n    _selectedDistrictId = id;\n    _selectedNeighborhoodId = null;\n    notifyListeners();\n  }\n\n  updateSelectedNeighborhood(int id) {\n    _selectedNeighborhoodId = id;\n    notifyListeners();\n  }\n\n  updateSelectCategory(int index) {\n    _selectCategory = index;\n    notifyListeners();\n  }\n\n  void changeSelectedIndex(int selectedIndex, {bool notify = true}) {\n    _selectedCityId = selectedIndex;\n    if (notify) {\n      notifyListeners();\n    }\n  }\n\n  void setFilterIndex(int selectedIndex) {\n    _filterIndex = selectedIndex;\n  }\n\n  void setFilterType() {\n    if (_filterType == 0)\n      _filterType = 1;\n    else\n      _filterType = 0;\n\n    _filterIndex = -1;\n\n    notifyListeners();\n  }\n}\n"
        }
    ]
}