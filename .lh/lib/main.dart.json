{
    "sourceFile": "lib/main.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667569426685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667569426685,
            "name": "Commit-0",
            "content": "import 'dart:async';\n\nimport 'package:ainsighter/helper/route_helper.dart';\nimport 'package:ainsighter/provider/address_provider.dart';\nimport 'package:ainsighter/provider/auth_provider.dart';\nimport 'package:ainsighter/provider/category_provider.dart';\nimport 'package:ainsighter/provider/classified_provider.dart';\nimport 'package:ainsighter/provider/localization_provider.dart';\nimport 'package:ainsighter/provider/notification_provider.dart';\nimport 'package:ainsighter/provider/onboarding_provider.dart';\nimport 'package:ainsighter/provider/profile_provider.dart';\nimport 'package:ainsighter/provider/splash_provider.dart';\nimport 'package:ainsighter/provider/theme_provider.dart';\nimport 'package:ainsighter/theme/dark_theme.dart';\nimport 'package:ainsighter/theme/light_theme.dart';\nimport 'package:ainsighter/utill/app_constants.dart';\nimport 'package:ainsighter/view/screens/splash/splash_screen.dart';\nimport 'package:flutter/foundation.dart' show kIsWeb;\nimport 'package:flutter/material.dart';\n// import 'package:flutter_local_notifications/flutter_local_notifications.dart';\nimport 'package:flutter_localizations/flutter_localizations.dart';\nimport 'package:provider/provider.dart';\n\nimport 'di_container.dart' as di;\nimport 'localization/app_localization.dart';\n// import 'helper/notification_helper.dart';\n\n// final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin = (Platform.isAndroid || Platform.isIOS) ? FlutterLocalNotificationsPlugin() : null;\n\nFuture<void> main() async {\n  // setPathUrlStrategy();\n  WidgetsFlutterBinding.ensureInitialized();\n  // await Firebase.initializeApp();\n  await di.init();\n  // int _orderID;\n  // try {\n  //   if(!kIsWeb) {\n  //     final NotificationAppLaunchDetails notificationAppLaunchDetails = await flutterLocalNotificationsPlugin.getNotificationAppLaunchDetails();\n  //     if (notificationAppLaunchDetails?.didNotificationLaunchApp ?? false) {\n  //       _orderID = notificationAppLaunchDetails.payload != null ? int.parse(notificationAppLaunchDetails.payload) : null;\n  //     }\n  //     await NotificationHelper.initialize(flutterLocalNotificationsPlugin);\n  //     FirebaseMessaging.onBackgroundMessage(myBackgroundMessageHandler);\n  //   }\n  // }catch (e) {\n  //\n  // }\n\n  runApp(MultiProvider(\n    providers: [\n      ChangeNotifierProvider(create: (context) => di.sl<ThemeProvider>()),\n      ChangeNotifierProvider(\n          create: (context) => di.sl<LocalizationProvider>()),\n      ChangeNotifierProvider(create: (context) => di.sl<SplashProvider>()),\n      ChangeNotifierProvider(create: (context) => di.sl<OnBoardingProvider>()),\n      ChangeNotifierProvider(create: (context) => di.sl<AddressProvider>()),\n      ChangeNotifierProvider(create: (context) => di.sl<CategoryProvider>()),\n      ChangeNotifierProvider(create: (context) => di.sl<ClassifiedProvider>()),\n      ChangeNotifierProvider(create: (context) => di.sl<AuthProvider>()),\n      ChangeNotifierProvider(create: (context) => di.sl<ProfileProvider>()),\n      ChangeNotifierProvider(\n          create: (context) => di.sl<NotificationProvider>()),\n    ],\n    child: MyApp(),\n  ));\n}\n\nclass MyApp extends StatefulWidget {\n  static final navigatorKey = new GlobalKey<NavigatorState>();\n\n  @override\n  _MyAppState createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp> {\n  @override\n  void initState() {\n    super.initState();\n    RouteHelper.setupRouter();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    List<Locale> _locals = [];\n    AppConstants.languages.forEach((language) {\n      _locals.add(Locale(language.languageCode, language.countryCode));\n    });\n    return Consumer<SplashProvider>(\n      builder: (context, splashProvider, child) {\n        return (kIsWeb && splashProvider.configModel == null)\n            ? SizedBox()\n            : MaterialApp(\n                title: splashProvider.configModel != null\n                    ? splashProvider.configModel.ecommerceName ?? ''\n                    : AppConstants.APP_NAME,\n                // initialRoute: RouteHelper.splash,\n                onGenerateRoute: RouteHelper.router.generator,\n                debugShowCheckedModeBanner: false,\n                navigatorKey: MyApp.navigatorKey,\n                theme: light,\n                locale: Provider.of<LocalizationProvider>(context).locale,\n                localizationsDelegates: [\n                  AppLocalization.delegate,\n                  GlobalMaterialLocalizations.delegate,\n                  GlobalWidgetsLocalizations.delegate,\n                  GlobalCupertinoLocalizations.delegate,\n                ],\n                supportedLocales: _locals,\n                home: SplashScreen());\n      },\n    );\n  }\n}\n"
        }
    ]
}