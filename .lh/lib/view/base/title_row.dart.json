{
    "sourceFile": "lib/view/base/title_row.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667569434853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667569434853,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:ainsighter/localization/language_constrants.dart';\nimport 'package:ainsighter/utill/dimensions.dart';\nimport 'package:ainsighter/utill/styles.dart';\n\nclass TitleRow extends StatelessWidget {\n  final String title;\n  final Function onTap;\n  final Duration eventDuration;\n  final bool isDetailsPage;\n  TitleRow(\n      {@required this.title,\n      this.onTap,\n      this.eventDuration,\n      this.isDetailsPage});\n\n  @override\n  Widget build(BuildContext context) {\n    int days, hours, minutes, seconds;\n    if (eventDuration != null) {\n      days = eventDuration.inDays;\n      hours = eventDuration.inHours - days * 24;\n      minutes = eventDuration.inMinutes - (24 * days * 60) - (hours * 60);\n      seconds = eventDuration.inSeconds -\n          (24 * days * 60 * 60) -\n          (hours * 60 * 60) -\n          (minutes * 60);\n    }\n\n    return Row(children: [\n      Text(title, style: poppinsBold),\n      eventDuration == null\n          ? Expanded(child: SizedBox.shrink())\n          : Expanded(\n              child: Row(children: [\n              SizedBox(width: 5),\n              TimerBox(time: days),\n              Text(':',\n                  style: TextStyle(color: Theme.of(context).primaryColor)),\n              TimerBox(time: hours),\n              Text(':',\n                  style: TextStyle(color: Theme.of(context).primaryColor)),\n              TimerBox(time: minutes),\n              Text(':',\n                  style: TextStyle(color: Theme.of(context).primaryColor)),\n              TimerBox(time: seconds, isBorder: true),\n            ])),\n      onTap != null\n          ? InkWell(\n              onTap: onTap,\n              child: Row(children: [\n                isDetailsPage == null\n                    ? Text(getTranslated('VIEW_ALL', context),\n                        style: poppinsRegular.copyWith(\n                          color: Theme.of(context).primaryColor,\n                          fontSize: Dimensions.FONT_SIZE_SMALL,\n                        ))\n                    : SizedBox.shrink(),\n                Padding(\n                  padding: EdgeInsets.all(Dimensions.PADDING_SIZE_SMALL),\n                  child: Icon(\n                    Icons.arrow_forward_ios,\n                    color: isDetailsPage == null\n                        ? Theme.of(context).primaryColor\n                        : Theme.of(context).hintColor,\n                    size: Dimensions.FONT_SIZE_SMALL,\n                  ),\n                ),\n              ]),\n            )\n          : SizedBox.shrink(),\n    ]);\n  }\n}\n\nclass TimerBox extends StatelessWidget {\n  final int time;\n  final bool isBorder;\n\n  TimerBox({@required this.time, this.isBorder = false});\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      margin: EdgeInsets.symmetric(horizontal: 1),\n      padding: EdgeInsets.all(isBorder ? 0 : 2),\n      decoration: BoxDecoration(\n        color: isBorder ? null : Theme.of(context).primaryColor,\n        border: isBorder\n            ? Border.all(width: 2, color: Theme.of(context).primaryColor)\n            : null,\n        borderRadius: BorderRadius.circular(3),\n      ),\n      child: Center(\n        child: Text(\n          time < 10 ? '0$time' : time.toString(),\n          style: poppinsBold.copyWith(\n            color: isBorder\n                ? Theme.of(context).primaryColor\n                : Theme.of(context).accentColor,\n            fontSize: Dimensions.FONT_SIZE_SMALL,\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}