{
    "sourceFile": "lib/view/screens/forgot_password/verification_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667569434816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667569434816,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\nimport 'package:ainsighter/helper/responsive_helper.dart';\nimport 'package:ainsighter/helper/route_helper.dart';\nimport 'package:ainsighter/localization/language_constrants.dart';\nimport 'package:ainsighter/provider/auth_provider.dart';\nimport 'package:ainsighter/utill/color_resources.dart';\nimport 'package:ainsighter/utill/config.dart';\nimport 'package:ainsighter/utill/dimensions.dart';\nimport 'package:ainsighter/utill/images.dart';\nimport 'package:ainsighter/utill/styles.dart';\nimport 'package:ainsighter/view/base/custom_app_bar.dart';\nimport 'package:ainsighter/view/base/custom_button.dart';\nimport 'package:ainsighter/view/base/custom_secondary_button.dart';\nimport 'package:ainsighter/view/base/custom_snackbar.dart';\nimport 'package:ainsighter/view/base/main_app_bar.dart';\nimport 'package:ainsighter/view/screens/auth/create_account_screen.dart';\nimport 'package:ainsighter/view/screens/forgot_password/create_new_password_screen.dart';\nimport 'package:flutter_svg/svg.dart';\nimport 'package:pin_code_fields/pin_code_fields.dart';\nimport 'package:provider/provider.dart';\n\nclass VerificationScreen extends StatelessWidget {\n  final String emailAddress;\n  final bool fromSignUp;\n  VerificationScreen({@required this.emailAddress, this.fromSignUp = false});\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: ColorResources.getCardBgColor(context),\n      body: Column(\n        children: [\n          _buildHeaderDraw(context),\n          Expanded(\n            child: SingleChildScrollView(\n              physics: BouncingScrollPhysics(),\n              child: Center(\n                child: SizedBox(\n                  width: 1170,\n                  child: Consumer<AuthProvider>(\n                    builder: (context, authProvider, child) {\n                      return Column(\n                        children: [\n                          // SizedBox(height: 55),\n                          // Image.asset(Images.close_lock, width: 142, height: 142, color: Theme.of(context).primaryColor),\n                          // SizedBox(height: 40),\n                          // Center(\n                          //     child: Text(\n                          //   getTranslated('please_enter_your_number_to', context),\n                          //   textAlign: TextAlign.center,\n                          //   style: poppinsRegular.copyWith(color: ColorResources.getHintColor(context)),\n                          // )),\n                          Padding(\n                            padding: const EdgeInsets.all(\n                                Dimensions.PADDING_SIZE_LARGE),\n                            child: Column(\n                              crossAxisAlignment: CrossAxisAlignment.start,\n                              children: [\n                                SizedBox(height: 40),\n                                Padding(\n                                  padding: const EdgeInsets.symmetric(\n                                      horizontal: 50),\n                                  child: Center(\n                                      child: Text(\n                                    '${getTranslated('please_enter_4_digit_code', context)}\\n\\n $emailAddress',\n                                    textAlign: TextAlign.center,\n                                    style: poppinsRegular.copyWith(\n                                        color: ColorResources.getHintColor(\n                                            context)),\n                                  )),\n                                ),\n                                Padding(\n                                  padding: const EdgeInsets.symmetric(\n                                      horizontal: 39, vertical: 35),\n                                  child: PinCodeTextField(\n                                    length: 4,\n                                    appContext: context,\n                                    obscureText: false,\n                                    keyboardType: TextInputType.number,\n                                    animationType: AnimationType.fade,\n                                    pinTheme: PinTheme(\n                                      shape: PinCodeFieldShape.box,\n                                      fieldHeight: 63,\n                                      fieldWidth: 55,\n                                      borderWidth: 1,\n                                      borderRadius: BorderRadius.circular(10),\n                                      selectedColor: Theme.of(context)\n                                          .primaryColor\n                                          .withOpacity(.2),\n                                      selectedFillColor: Colors.white,\n                                      inactiveFillColor:\n                                          ColorResources.getCardBgColor(\n                                              context),\n                                      inactiveColor: Theme.of(context)\n                                          .primaryColor\n                                          .withOpacity(.2),\n                                      activeColor: Theme.of(context)\n                                          .primaryColor\n                                          .withOpacity(.4),\n                                      activeFillColor:\n                                          ColorResources.getCardBgColor(\n                                              context),\n                                    ),\n                                    animationDuration:\n                                        Duration(milliseconds: 300),\n                                    backgroundColor: Colors.transparent,\n                                    enableActiveFill: true,\n                                    onChanged:\n                                        authProvider.updateVerificationCode,\n                                    beforeTextPaste: (text) {\n                                      return true;\n                                    },\n                                  ),\n                                ),\n                                Center(\n                                    child: Text(\n                                  getTranslated(\n                                      'i_didnt_receive_the_code', context),\n                                  style: poppinsRegular.copyWith(\n                                    color: ColorResources.getHintColor(context),\n                                  ),\n                                )),\n                                Center(\n                                  child: InkWell(\n                                    onTap: () {\n                                      if (fromSignUp) {\n                                        Provider.of<AuthProvider>(context,\n                                                listen: false)\n                                            .checkEmail(emailAddress)\n                                            .then((value) {\n                                          if (value.isSuccess) {\n                                            showCustomSnackBar(\n                                                'Resent code successful',\n                                                context,\n                                                isError: false);\n                                          } else {\n                                            showCustomSnackBar(\n                                                value.message, context);\n                                          }\n                                        });\n                                      } else {\n                                        Provider.of<AuthProvider>(context,\n                                                listen: false)\n                                            .forgetPassword(emailAddress)\n                                            .then((value) {\n                                          if (value.isSuccess) {\n                                            showCustomSnackBar(\n                                                'Resent code successful',\n                                                context,\n                                                isError: false);\n                                          } else {\n                                            showCustomSnackBar(\n                                                value.message, context);\n                                          }\n                                        });\n                                      }\n                                    },\n                                    child: Padding(\n                                      padding: EdgeInsets.all(\n                                          Dimensions.PADDING_SIZE_EXTRA_SMALL),\n                                      child: Text(\n                                        getTranslated('resend_code', context),\n                                        style: poppinsMedium.copyWith(\n                                          color: ColorResources.getTextColor(\n                                              context),\n                                        ),\n                                      ),\n                                    ),\n                                  ),\n                                ),\n                                SizedBox(height: 48),\n                                if (authProvider.isEnableVerificationCode)\n                                  CustomSecondaryButton(\n                                    text: getTranslated('verify', context),\n                                    color: Config.PrimaryColor,\n                                    isLoading: authProvider\n                                        .isPhoneNumberVerificationButtonLoading,\n                                    onPress: () {\n                                      if (fromSignUp) {\n                                        Provider.of<AuthProvider>(context,\n                                                listen: false)\n                                            .verifyEmail(emailAddress)\n                                            .then((value) {\n                                          if (value.isSuccess) {\n                                            Navigator.of(context).pushNamed(\n                                                RouteHelper.createAccount,\n                                                arguments:\n                                                    CreateAccountScreen());\n                                          } else {\n                                            showCustomSnackBar(\n                                                value.message, context);\n                                          }\n                                        });\n                                      } else {\n                                        Provider.of<AuthProvider>(context,\n                                                listen: false)\n                                            .verifyToken(emailAddress)\n                                            .then((value) {\n                                          if (value.isSuccess) {\n                                            Navigator.of(context).pushNamed(\n                                              RouteHelper.getNewPassRoute(\n                                                  emailAddress,\n                                                  authProvider\n                                                      .verificationCode),\n                                              arguments:\n                                                  CreateNewPasswordScreen(\n                                                      email: emailAddress,\n                                                      resetToken: authProvider\n                                                          .verificationCode),\n                                            );\n                                          } else {\n                                            showCustomSnackBar(\n                                                value.message, context);\n                                          }\n                                        });\n                                      }\n                                    },\n                                  ),\n                              ],\n                            ),\n                          ),\n                        ],\n                      );\n                    },\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildHeaderDraw(BuildContext context) {\n    return Stack(\n      alignment: Alignment.topCenter,\n      children: [\n        Container(\n            height: MediaQuery.of(context).size.height * .22,\n            color: Color(0xffa0dbe6)),\n        SvgPicture.asset('assets/image/logo.svg',\n            width: MediaQuery.of(context).size.width * .43, fit: BoxFit.cover),\n        Positioned(\n          left: 30,\n          top: 56,\n          child: Container(\n            decoration: BoxDecoration(\n                shape: BoxShape.circle, color: Colors.black.withOpacity(.5)),\n            child: IconButton(\n              color: Colors.white,\n              icon: Icon(Icons.arrow_back_ios_rounded),\n              onPressed: () {\n                Navigator.of(context).pop();\n              },\n            ),\n          ),\n        )\n      ],\n    );\n  }\n}\n"
        }
    ]
}