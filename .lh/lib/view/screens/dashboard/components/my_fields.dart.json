{
    "sourceFile": "lib/view/screens/dashboard/components/my_fields.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667569433426,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667569433426,
            "name": "Commit-0",
            "content": "import 'package:ainsighter/data/model/response/affiliate_link_model.dart';\nimport 'package:ainsighter/data/model/response/classified_model.dart';\nimport 'package:ainsighter/provider/classified_provider.dart';\nimport 'package:ainsighter/utill/config.dart';\nimport 'package:ainsighter/view/screens/dashboard/components/classified_card.dart';\nimport 'package:ainsighter/view/screens/dashboard/components/storage_details.dart';\nimport 'package:flutter/material.dart';\nimport 'package:provider/provider.dart';\n\nimport 'file_info_card.dart';\n\nclass AffiliateLinks extends StatefulWidget {\n  @override\n  _AffiliateLinksState createState() => _AffiliateLinksState();\n}\n\nclass _AffiliateLinksState extends State<AffiliateLinks> {\n  Future _future;\n  Future _myListFuture;\n\n  int _selectedTab = 1;\n\n  @override\n  void initState() {\n    Future.microtask(() async {\n      setState(() {\n        _future = Provider.of<ClassifiedProvider>(context, listen: false)\n            .getMyAffiliateLinks();\n        _myListFuture = Provider.of<ClassifiedProvider>(context, listen: false)\n            .getClassifiedByMe(context);\n      });\n    });\n\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Consumer<ClassifiedProvider>(\n      builder: (context, brnch, child) => Column(\n        crossAxisAlignment: CrossAxisAlignment.center,\n        mainAxisAlignment: MainAxisAlignment.center,\n        children: [\n          Row(\n            mainAxisAlignment: MainAxisAlignment.center,\n            children: [\n              InkWell(\n                borderRadius: BorderRadius.circular(3),\n                child: Container(\n                  padding: EdgeInsets.symmetric(horizontal: 8, vertical: 4),\n                  decoration: BoxDecoration(\n                    color: _selectedTab == 1\n                        ? Config.PrimaryColor\n                        : Colors.transparent,\n                    border: Border.all(color: Config.PrimaryColor),\n                    borderRadius: BorderRadius.circular(3),\n                  ),\n                  child: Text(\n                    'Paylaşımlarım',\n                    style: TextStyle(\n                        color: _selectedTab == 1\n                            ? Colors.white\n                            : Config.PrimaryColor,\n                        fontSize: 13),\n                  ),\n                ),\n                onTap: () {\n                  setState(() {\n                    _selectedTab = 1;\n                  });\n                },\n              ),\n              SizedBox(\n                width: 10,\n              ),\n              InkWell(\n                borderRadius: BorderRadius.circular(3),\n                child: Container(\n                  padding: EdgeInsets.symmetric(horizontal: 8, vertical: 4),\n                  decoration: BoxDecoration(\n                    color: _selectedTab == 2\n                        ? Config.PrimaryColor\n                        : Colors.transparent,\n                    border: Border.all(color: Config.PrimaryColor),\n                    borderRadius: BorderRadius.circular(3),\n                  ),\n                  child: Text(\n                    'İlanlarım',\n                    style: TextStyle(\n                        color: _selectedTab == 2\n                            ? Colors.white\n                            : Config.PrimaryColor,\n                        fontSize: 13),\n                  ),\n                ),\n                onTap: () {\n                  setState(() {\n                    _selectedTab = 2;\n                  });\n                },\n              ),\n            ],\n          ),\n          SizedBox(\n            height: 16,\n          ),\n          if (_selectedTab == 1)\n            FutureBuilder<List<AffiliateLinkModel>>(\n              future: _future,\n              builder: (BuildContext context,\n                  AsyncSnapshot<List<AffiliateLinkModel>> snapshot) {\n                if (snapshot.hasData) {\n                  if (snapshot.data.isNotEmpty)\n                    return GridView.builder(\n                      physics: NeverScrollableScrollPhysics(),\n                      shrinkWrap: true,\n                      itemCount: snapshot.data.length,\n                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                        crossAxisCount: 2,\n                        crossAxisSpacing: 10,\n                        mainAxisSpacing: 10,\n                        childAspectRatio: 0.65,\n                      ),\n                      itemBuilder: (context, index) =>\n                          AffiliateCard(affiliate: snapshot.data[index]),\n                    );\n                  else\n                    return SizedBox(\n                      height: 400,\n                      child: Column(\n                        mainAxisAlignment: MainAxisAlignment.center,\n                        children: [\n                          Icon(\n                            Icons.search,\n                            color: Colors.grey.shade400,\n                            size: 80,\n                          ),\n                          SizedBox(\n                            height: 20,\n                          ),\n                          Text(\n                            'Aranan kriterlere uygun hiç paylaşım bulunamadı.',\n                            textAlign: TextAlign.center,\n                            style: TextStyle(\n                              color: Colors.grey.shade500,\n                              fontSize: 18,\n                              height: 1.6,\n                            ),\n                          )\n                        ],\n                      ),\n                    );\n                } else if (snapshot.hasError) {\n                  return SizedBox(\n                    height: 400,\n                    child: Column(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      children: [\n                        Icon(\n                          Icons.error,\n                          color: Colors.grey.shade400,\n                          size: 80,\n                        ),\n                        SizedBox(\n                          height: 20,\n                        ),\n                        Text(\n                          'Paylaşımlar çekilemedi',\n                          textAlign: TextAlign.center,\n                          style: TextStyle(\n                            color: Colors.grey.shade500,\n                            fontSize: 18,\n                            height: 1.6,\n                          ),\n                        )\n                      ],\n                    ),\n                  );\n                }\n                return SizedBox(\n                  height: 400,\n                  child: Center(\n                    child: CircularProgressIndicator(),\n                  ),\n                );\n              },\n            )\n          else\n            FutureBuilder<List<ClassifiedModel>>(\n              future: _myListFuture,\n              builder: (BuildContext context,\n                  AsyncSnapshot<List<ClassifiedModel>> snapshot) {\n                if (snapshot.hasData) {\n                  if (snapshot.data.isNotEmpty)\n                    return GridView.builder(\n                      physics: NeverScrollableScrollPhysics(),\n                      shrinkWrap: true,\n                      itemCount: snapshot.data.length,\n                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                        crossAxisCount: 2,\n                        crossAxisSpacing: 10,\n                        mainAxisSpacing: 10,\n                        childAspectRatio: 0.7,\n                      ),\n                      itemBuilder: (context, index) =>\n                          ClassifiedCard(classified: snapshot.data[index]),\n                    );\n                  else\n                    return SizedBox(\n                      height: 400,\n                      child: Column(\n                        mainAxisAlignment: MainAxisAlignment.center,\n                        children: [\n                          Icon(\n                            Icons.search,\n                            color: Colors.grey.shade400,\n                            size: 80,\n                          ),\n                          SizedBox(\n                            height: 20,\n                          ),\n                          Text(\n                            'Aranan kriterlere uygun hiç ilan bulunamadı.',\n                            textAlign: TextAlign.center,\n                            style: TextStyle(\n                              color: Colors.grey.shade500,\n                              fontSize: 18,\n                              height: 1.6,\n                            ),\n                          )\n                        ],\n                      ),\n                    );\n                } else if (snapshot.hasError) {\n                  return SizedBox(\n                    height: 400,\n                    child: Column(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      children: [\n                        Icon(\n                          Icons.error,\n                          color: Colors.grey.shade400,\n                          size: 80,\n                        ),\n                        SizedBox(\n                          height: 20,\n                        ),\n                        Text(\n                          'İlanlar çekilemedi',\n                          textAlign: TextAlign.center,\n                          style: TextStyle(\n                            color: Colors.grey.shade500,\n                            fontSize: 18,\n                            height: 1.6,\n                          ),\n                        )\n                      ],\n                    ),\n                  );\n                }\n                return SizedBox(\n                  height: 400,\n                  child: Center(\n                    child: CircularProgressIndicator(),\n                  ),\n                );\n              },\n            ),\n        ],\n      ),\n    );\n  }\n}\n"
        }
    ]
}