{
    "sourceFile": "lib/view/screens/classified/classified_filter_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1667404690055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667569422872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,21 @@\n-import 'package:ilanakoy/provider/address_provider.dart';\r\n-import 'package:ilanakoy/provider/auth_provider.dart';\r\n-import 'package:ilanakoy/provider/splash_provider.dart';\r\n-import 'package:ilanakoy/utill/config.dart';\r\n-import 'package:ilanakoy/view/base/custom_app_bar.dart';\r\n-import 'package:ilanakoy/view/screens/auth/login_screen.dart';\r\n-import 'package:ilanakoy/view/screens/classified/classified_screen.dart';\r\n-import 'package:ilanakoy/view/screens/classified/create_classified_screen.dart';\r\n+import 'package:ainsighter/provider/address_provider.dart';\r\n+import 'package:ainsighter/provider/auth_provider.dart';\r\n+import 'package:ainsighter/provider/splash_provider.dart';\r\n+import 'package:ainsighter/utill/config.dart';\r\n+import 'package:ainsighter/view/base/custom_app_bar.dart';\r\n+import 'package:ainsighter/view/screens/auth/login_screen.dart';\r\n+import 'package:ainsighter/view/screens/classified/classified_screen.dart';\r\n+import 'package:ainsighter/view/screens/classified/create_classified_screen.dart';\r\n import 'package:flutter/material.dart';\r\n import 'package:intl/intl.dart';\r\n import 'package:provider/provider.dart';\r\n import 'package:selectify/selectify.dart';\r\n import 'package:async/async.dart';\r\n import 'package:syncfusion_flutter_sliders/sliders.dart';\r\n \r\n+import '../../../provider/category_provider.dart';\r\n+\r\n class ClassifiedFilterScreen extends StatefulWidget {\r\n   const ClassifiedFilterScreen({Key key}) : super(key: key);\r\n \r\n   @override\r\n@@ -34,9 +36,9 @@\n     super.initState();\r\n   }\r\n \r\n   List<int> _usageStatusIds = [];\r\n-  List<int> _landStatusIds = [];\r\n+  List<int> _categoryIds = [];\r\n   int _cityId;\r\n   List<int> _districtIds = [];\r\n   List<int> _neighborhoodIds = [];\r\n \r\n@@ -358,8 +360,68 @@\n                               }),\r\n                           SizedBox(\r\n                             height: 10,\r\n                           ),\r\n+                          FutureBuilder<List<S2Choice<int>>>(\r\n+                              initialData: [],\r\n+                              future: Provider.of<CategoryProvider>(context,\r\n+                                      listen: false)\r\n+                                  .getCategoryDropdown(context),\r\n+                              builder: (context, snapshot) {\r\n+                                return SmartSelect<int>.multiple(\r\n+                                    title: 'Kategori',\r\n+                                    placeholder: 'Kategori',\r\n+                                    choiceItems: snapshot.data,\r\n+                                    tileBuilder: (con, d) {\r\n+                                      return InkWell(\r\n+                                        onTap: d.showModal,\r\n+                                        child: Container(\r\n+                                          padding: EdgeInsets.symmetric(\r\n+                                              horizontal: 16),\r\n+                                          height: 64,\r\n+                                          width: double.infinity,\r\n+                                          decoration: BoxDecoration(\r\n+                                            color: Color(0xfff2f0f0),\r\n+                                            borderRadius:\r\n+                                                BorderRadius.circular(10),\r\n+                                          ),\r\n+                                          child: Center(\r\n+                                            child: RichText(\r\n+                                              textAlign: TextAlign.center,\r\n+                                              maxLines: 1,\r\n+                                              overflow: TextOverflow.ellipsis,\r\n+                                              text: TextSpan(\r\n+                                                  children: <TextSpan>[\r\n+                                                    TextSpan(\r\n+                                                      text: d.value == null\r\n+                                                          ? d.title\r\n+                                                          : d.valueDisplay,\r\n+                                                      style: TextStyle(\r\n+                                                          fontSize: 15),\r\n+                                                    ),\r\n+                                                    TextSpan(text: ' '),\r\n+                                                    TextSpan(\r\n+                                                      text: '(Seçiniz)',\r\n+                                                      style: TextStyle(\r\n+                                                          fontSize: 12),\r\n+                                                    )\r\n+                                                  ],\r\n+                                                  style: TextStyle(\r\n+                                                      color: Colors.black54)),\r\n+                                            ),\r\n+                                          ),\r\n+                                        ),\r\n+                                      );\r\n+                                    },\r\n+                                    choiceType: S2ChoiceType.checkboxes,\r\n+                                    value: _categoryIds,\r\n+                                    onChange: (state) => setState(\r\n+                                        () => _categoryIds = state.value));\r\n+                              }),\r\n+                          SizedBox(\r\n+                            height: 10,\r\n+                          ),\r\n+\r\n                           SmartSelect<int>.multiple(\r\n                               title: 'Kullanım Durumu',\r\n                               placeholder: 'Kullanım Durumu',\r\n                               choiceItems: usageStatus,\r\n@@ -449,9 +511,9 @@\n                                   cityId: _cityId,\r\n                                   districtIds: _districtIds,\r\n                                   neighborhoodIds: _neighborhoodIds,\r\n                                   usageStatusIds: _usageStatusIds,\r\n-                                  landStatusIds: _landStatusIds,\r\n+                                  categoryIds: _categoryIds,\r\n                                   keyword: _searchController.text,\r\n                                   minPrice: _minMaxValues.start,\r\n                                   maxPrice: _minMaxValues.end,\r\n                                 )));\r\n"
                }
            ],
            "date": 1667404690055,
            "name": "Commit-0",
            "content": "import 'package:ilanakoy/provider/address_provider.dart';\r\nimport 'package:ilanakoy/provider/auth_provider.dart';\r\nimport 'package:ilanakoy/provider/splash_provider.dart';\r\nimport 'package:ilanakoy/utill/config.dart';\r\nimport 'package:ilanakoy/view/base/custom_app_bar.dart';\r\nimport 'package:ilanakoy/view/screens/auth/login_screen.dart';\r\nimport 'package:ilanakoy/view/screens/classified/classified_screen.dart';\r\nimport 'package:ilanakoy/view/screens/classified/create_classified_screen.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:intl/intl.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:selectify/selectify.dart';\r\nimport 'package:async/async.dart';\r\nimport 'package:syncfusion_flutter_sliders/sliders.dart';\r\n\r\nclass ClassifiedFilterScreen extends StatefulWidget {\r\n  const ClassifiedFilterScreen({Key key}) : super(key: key);\r\n\r\n  @override\r\n  _ClassifiedFilterScreenState createState() => _ClassifiedFilterScreenState();\r\n}\r\n\r\nclass _ClassifiedFilterScreenState extends State<ClassifiedFilterScreen> {\r\n  void initState() {\r\n    _cityFuture = Provider.of<AddressProvider>(context, listen: false)\r\n        .getCityList(context);\r\n\r\n    _minMaxValues = SfRangeValues(\r\n        0.0,\r\n        Provider.of<SplashProvider>(context, listen: false)\r\n            .configModel\r\n            .maxClassifiedPrice\r\n            .toDouble());\r\n    super.initState();\r\n  }\r\n\r\n  List<int> _usageStatusIds = [];\r\n  List<int> _landStatusIds = [];\r\n  int _cityId;\r\n  List<int> _districtIds = [];\r\n  List<int> _neighborhoodIds = [];\r\n\r\n  Future _cityFuture;\r\n\r\n  TextEditingController _searchController = TextEditingController();\r\n\r\n  List<S2Choice<int>> usageStatus = [\r\n    S2Choice<int>(value: 1, title: 'Yeni'),\r\n    S2Choice<int>(value: 2, title: 'Yeni Gibi'),\r\n    S2Choice<int>(value: 3, title: 'İyi'),\r\n    S2Choice<int>(value: 4, title: 'Makul'),\r\n    S2Choice<int>(value: 5, title: 'Yıpranmış'),\r\n  ];\r\n\r\n  NumberFormat formatter = NumberFormat.decimalPattern('tr');\r\n\r\n  SfRangeValues _minMaxValues;\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    final maxClassifiedPrice =\r\n        Provider.of<SplashProvider>(context, listen: false)\r\n            .configModel\r\n            .maxClassifiedPrice\r\n            .toDouble();\r\n\r\n    return SafeArea(\r\n      child: Scaffold(\r\n        backgroundColor: Colors.white,\r\n        extendBodyBehindAppBar: true,\r\n        body: CustomScrollView(\r\n          physics: ClampingScrollPhysics(),\r\n          slivers: [\r\n            SliverPersistentHeader(\r\n              pinned: true,\r\n              delegate: MyHeaderDelegate(\r\n                  searchController: _searchController,\r\n                  onDismiss: () {\r\n                    setState(() {\r\n                      _searchController.clear();\r\n                      // _cityId = null;\r\n                      // _districtIds = [];\r\n                      // _neighborhoodIds = [];\r\n                      // _zoningStatusIds = [];\r\n                      // _landStatusIds = [];\r\n                    });\r\n                  }),\r\n            ),\r\n            SliverPadding(\r\n              padding: EdgeInsets.symmetric(horizontal: 10, vertical: 10),\r\n              sliver: SliverFillRemaining(\r\n                child: Column(\r\n                  children: [\r\n                    Expanded(\r\n                      child: Column(\r\n                        children: [\r\n                          SizedBox(\r\n                            height: 10,\r\n                          ),\r\n                          FutureBuilder<List<S2Choice<int>>>(\r\n                              initialData: [],\r\n                              future: _cityFuture,\r\n                              builder: (context, snapshot) {\r\n                                return SmartSelect<int>.single(\r\n                                    title: 'Şehir',\r\n                                    choiceItems: snapshot.data,\r\n                                    choiceEmptyBuilder: (con, d) {\r\n                                      return Center(\r\n                                        child: Column(\r\n                                          mainAxisAlignment:\r\n                                              MainAxisAlignment.center,\r\n                                          children: [\r\n                                            Icon(\r\n                                              Icons.search,\r\n                                              color: Colors.grey.shade400,\r\n                                              size: 72,\r\n                                            ),\r\n                                            SizedBox(\r\n                                              height: 20,\r\n                                            ),\r\n                                            Text(\r\n                                              'Hiç sonuç bulunamadı',\r\n                                              textAlign: TextAlign.center,\r\n                                              style: TextStyle(\r\n                                                color: Colors.grey.shade500,\r\n                                                fontSize: 15,\r\n                                              ),\r\n                                            )\r\n                                          ],\r\n                                        ),\r\n                                      );\r\n                                    },\r\n                                    tileBuilder: (con, d) {\r\n                                      return InkWell(\r\n                                        onTap: d.showModal,\r\n                                        child: Container(\r\n                                          padding: EdgeInsets.symmetric(\r\n                                              horizontal: 16),\r\n                                          height: 64,\r\n                                          width: double.infinity,\r\n                                          decoration: BoxDecoration(\r\n                                            color: Color(0xfff2f0f0),\r\n                                            borderRadius:\r\n                                                BorderRadius.circular(10),\r\n                                          ),\r\n                                          child: Center(\r\n                                            child: RichText(\r\n                                              textAlign: TextAlign.center,\r\n                                              maxLines: 1,\r\n                                              overflow: TextOverflow.ellipsis,\r\n                                              text: TextSpan(\r\n                                                  children: <TextSpan>[\r\n                                                    TextSpan(\r\n                                                      text: d.value == null\r\n                                                          ? d.title\r\n                                                          : d.valueDisplay,\r\n                                                      style: TextStyle(\r\n                                                          fontSize: 15),\r\n                                                    ),\r\n                                                    TextSpan(text: ' '),\r\n                                                    TextSpan(\r\n                                                      text: '(Seçiniz)',\r\n                                                      style: TextStyle(\r\n                                                          fontSize: 12),\r\n                                                    )\r\n                                                  ],\r\n                                                  style: TextStyle(\r\n                                                      color: Colors.black54)),\r\n                                            ),\r\n                                          ),\r\n                                        ),\r\n                                      );\r\n                                    },\r\n                                    choiceType: S2ChoiceType.radios,\r\n                                    value: _cityId,\r\n                                    onChange: (state) {\r\n                                      setState(() {\r\n                                        _districtIds = [];\r\n                                        _neighborhoodIds = [];\r\n                                        _cityId = state.value;\r\n                                      });\r\n                                    });\r\n                              }),\r\n                          SizedBox(\r\n                            height: 10,\r\n                          ),\r\n                          FutureBuilder<List<S2Choice<int>>>(\r\n                              initialData: [],\r\n                              future: Provider.of<AddressProvider>(context,\r\n                                      listen: false)\r\n                                  .getDistrictList(context, _cityId),\r\n                              builder: (context, snapshot) {\r\n                                return SmartSelect<int>.multiple(\r\n                                    title: 'İlçe',\r\n                                    placeholder: 'İlçe',\r\n                                    choiceItems: snapshot.data,\r\n                                    choiceEmptyBuilder: (con, d) {\r\n                                      return Center(\r\n                                        child: Column(\r\n                                          mainAxisAlignment:\r\n                                              MainAxisAlignment.center,\r\n                                          children: [\r\n                                            Icon(\r\n                                              Icons.search,\r\n                                              color: Colors.grey.shade400,\r\n                                              size: 72,\r\n                                            ),\r\n                                            SizedBox(\r\n                                              height: 20,\r\n                                            ),\r\n                                            Text(\r\n                                              'Hiç sonuç bulunamadı',\r\n                                              textAlign: TextAlign.center,\r\n                                              style: TextStyle(\r\n                                                color: Colors.grey.shade500,\r\n                                                fontSize: 15,\r\n                                              ),\r\n                                            )\r\n                                          ],\r\n                                        ),\r\n                                      );\r\n                                    },\r\n                                    tileBuilder: (con, d) {\r\n                                      return InkWell(\r\n                                        onTap: d.showModal,\r\n                                        child: Container(\r\n                                          padding: EdgeInsets.symmetric(\r\n                                              horizontal: 16),\r\n                                          height: 64,\r\n                                          width: double.infinity,\r\n                                          decoration: BoxDecoration(\r\n                                            color: Color(0xfff2f0f0),\r\n                                            borderRadius:\r\n                                                BorderRadius.circular(10),\r\n                                          ),\r\n                                          child: Center(\r\n                                            child: RichText(\r\n                                              textAlign: TextAlign.center,\r\n                                              maxLines: 1,\r\n                                              overflow: TextOverflow.ellipsis,\r\n                                              text: TextSpan(\r\n                                                  children: <TextSpan>[\r\n                                                    TextSpan(\r\n                                                      text: d.value == null\r\n                                                          ? d.title\r\n                                                          : d.valueDisplay,\r\n                                                      style: TextStyle(\r\n                                                          fontSize: 15),\r\n                                                    ),\r\n                                                    TextSpan(text: ' '),\r\n                                                    TextSpan(\r\n                                                      text: '(Seçiniz)',\r\n                                                      style: TextStyle(\r\n                                                          fontSize: 12),\r\n                                                    )\r\n                                                  ],\r\n                                                  style: TextStyle(\r\n                                                      color: Colors.black54)),\r\n                                            ),\r\n                                          ),\r\n                                        ),\r\n                                      );\r\n                                    },\r\n                                    choiceType: S2ChoiceType.checkboxes,\r\n                                    value: _districtIds,\r\n                                    onChange: (state) {\r\n                                      setState(() {\r\n                                        _neighborhoodIds = [];\r\n                                        _districtIds = state.value;\r\n                                      });\r\n                                    });\r\n                              }),\r\n                          SizedBox(\r\n                            height: 10,\r\n                          ),\r\n                          FutureBuilder<List<S2Choice<int>>>(\r\n                              initialData: [],\r\n                              future: Provider.of<AddressProvider>(context,\r\n                                      listen: false)\r\n                                  .getNeighborhoodList(context, _districtIds),\r\n                              builder: (context, snapshot) {\r\n                                return SmartSelect<int>.multiple(\r\n                                    title: 'Mahalle',\r\n                                    placeholder: 'Mahalle',\r\n                                    choiceItems: snapshot.data,\r\n                                    choiceEmptyBuilder: (con, d) {\r\n                                      return Center(\r\n                                        child: Column(\r\n                                          mainAxisAlignment:\r\n                                              MainAxisAlignment.center,\r\n                                          children: [\r\n                                            Icon(\r\n                                              Icons.search,\r\n                                              color: Colors.grey.shade400,\r\n                                              size: 72,\r\n                                            ),\r\n                                            SizedBox(\r\n                                              height: 20,\r\n                                            ),\r\n                                            Text(\r\n                                              'Hiç sonuç bulunamadı',\r\n                                              textAlign: TextAlign.center,\r\n                                              style: TextStyle(\r\n                                                color: Colors.grey.shade500,\r\n                                                fontSize: 15,\r\n                                              ),\r\n                                            )\r\n                                          ],\r\n                                        ),\r\n                                      );\r\n                                    },\r\n                                    tileBuilder: (con, d) {\r\n                                      return InkWell(\r\n                                        onTap: d.showModal,\r\n                                        child: Container(\r\n                                          padding: EdgeInsets.symmetric(\r\n                                              horizontal: 16),\r\n                                          height: 64,\r\n                                          width: double.infinity,\r\n                                          decoration: BoxDecoration(\r\n                                            color: Color(0xfff2f0f0),\r\n                                            borderRadius:\r\n                                                BorderRadius.circular(10),\r\n                                          ),\r\n                                          child: Center(\r\n                                            child: RichText(\r\n                                              textAlign: TextAlign.center,\r\n                                              maxLines: 1,\r\n                                              overflow: TextOverflow.ellipsis,\r\n                                              text: TextSpan(\r\n                                                  children: <TextSpan>[\r\n                                                    TextSpan(\r\n                                                      text: d.value == null\r\n                                                          ? d.title\r\n                                                          : d.valueDisplay,\r\n                                                      style: TextStyle(\r\n                                                          fontSize: 15),\r\n                                                    ),\r\n                                                    TextSpan(text: ' '),\r\n                                                    TextSpan(\r\n                                                      text: '(Seçiniz)',\r\n                                                      style: TextStyle(\r\n                                                          fontSize: 12),\r\n                                                    )\r\n                                                  ],\r\n                                                  style: TextStyle(\r\n                                                      color: Colors.black54)),\r\n                                            ),\r\n                                          ),\r\n                                        ),\r\n                                      );\r\n                                    },\r\n                                    choiceGrouped: true,\r\n                                    choiceType: S2ChoiceType.checkboxes,\r\n                                    value: _neighborhoodIds,\r\n                                    onChange: (state) => setState(\r\n                                        () => _neighborhoodIds = state.value));\r\n                              }),\r\n                          SizedBox(\r\n                            height: 10,\r\n                          ),\r\n                          SmartSelect<int>.multiple(\r\n                              title: 'Kullanım Durumu',\r\n                              placeholder: 'Kullanım Durumu',\r\n                              choiceItems: usageStatus,\r\n                              tileBuilder: (con, d) {\r\n                                return InkWell(\r\n                                  onTap: d.showModal,\r\n                                  child: Container(\r\n                                    padding:\r\n                                        EdgeInsets.symmetric(horizontal: 16),\r\n                                    height: 64,\r\n                                    width: double.infinity,\r\n                                    decoration: BoxDecoration(\r\n                                      color: Color(0xfff2f0f0),\r\n                                      borderRadius: BorderRadius.circular(10),\r\n                                    ),\r\n                                    child: Center(\r\n                                      child: RichText(\r\n                                        textAlign: TextAlign.center,\r\n                                        maxLines: 1,\r\n                                        overflow: TextOverflow.ellipsis,\r\n                                        text: TextSpan(\r\n                                            children: <TextSpan>[\r\n                                              TextSpan(\r\n                                                text: d.value == null\r\n                                                    ? d.title\r\n                                                    : d.valueDisplay,\r\n                                                style: TextStyle(fontSize: 15),\r\n                                              ),\r\n                                              TextSpan(text: ' '),\r\n                                              TextSpan(\r\n                                                text: '(Seçiniz)',\r\n                                                style: TextStyle(fontSize: 12),\r\n                                              )\r\n                                            ],\r\n                                            style: TextStyle(\r\n                                                color: Colors.black54)),\r\n                                      ),\r\n                                    ),\r\n                                  ),\r\n                                );\r\n                              },\r\n                              choiceType: S2ChoiceType.checkboxes,\r\n                              value: _usageStatusIds,\r\n                              onChange: (state) => setState(\r\n                                  () => _usageStatusIds = state.value)),\r\n                          SizedBox(\r\n                            height: 10,\r\n                          ),\r\n                          // RichText(\r\n                          //   textAlign: TextAlign.center,\r\n                          //   maxLines: 1,\r\n                          //   overflow: TextOverflow.ellipsis,\r\n                          //   text: TextSpan(children: <TextSpan>[\r\n                          //     TextSpan(\r\n                          //       text: 'Fiyat Aralığı',\r\n                          //       style: TextStyle(fontSize: 15),\r\n                          //     ),\r\n                          //   ], style: TextStyle(color: Colors.black54)),\r\n                          // ),\r\n                          SfRangeSlider(\r\n                            min: 0.0,\r\n                            max: maxClassifiedPrice,\r\n                            values: _minMaxValues,\r\n                            stepSize: maxClassifiedPrice / 50,\r\n                            interval: maxClassifiedPrice / 2,\r\n                            showTicks: true,\r\n                            showLabels: true,\r\n                            enableTooltip: true,\r\n                            minorTicksPerInterval: 1,\r\n                            onChanged: (SfRangeValues values) {\r\n                              setState(() {\r\n                                _minMaxValues = values;\r\n                              });\r\n                            },\r\n                            labelFormatterCallback: (t, label) {\r\n                              return '${formatter.format(int.parse(label))} ₺';\r\n                            },\r\n                          ),\r\n                          //\r\n                        ],\r\n                      ),\r\n                    ),\r\n                    InkWell(\r\n                      onTap: () {\r\n                        Navigator.of(context).push(MaterialPageRoute(\r\n                            builder: (_) => ClassifiedScreen(\r\n                                  cityId: _cityId,\r\n                                  districtIds: _districtIds,\r\n                                  neighborhoodIds: _neighborhoodIds,\r\n                                  usageStatusIds: _usageStatusIds,\r\n                                  landStatusIds: _landStatusIds,\r\n                                  keyword: _searchController.text,\r\n                                  minPrice: _minMaxValues.start,\r\n                                  maxPrice: _minMaxValues.end,\r\n                                )));\r\n                      },\r\n                      child: Container(\r\n                        margin: EdgeInsets.only(bottom: 10),\r\n                        padding: EdgeInsets.symmetric(horizontal: 16),\r\n                        height: 64,\r\n                        width: double.infinity,\r\n                        decoration: BoxDecoration(\r\n                          color: Theme.of(context).primaryColor,\r\n                          borderRadius: BorderRadius.circular(10),\r\n                        ),\r\n                        child: Center(\r\n                          child: RichText(\r\n                            textAlign: TextAlign.center,\r\n                            maxLines: 1,\r\n                            overflow: TextOverflow.ellipsis,\r\n                            text: TextSpan(children: <TextSpan>[\r\n                              TextSpan(\r\n                                text: 'Ara',\r\n                                style: TextStyle(fontSize: 18),\r\n                              ),\r\n                            ], style: TextStyle(color: Colors.white)),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    )\r\n                  ],\r\n                ),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass MyHeaderDelegate extends SliverPersistentHeaderDelegate {\r\n  MyHeaderDelegate({this.searchController, this.onDismiss});\r\n\r\n  bool _search = true;\r\n\r\n  TextEditingController searchController;\r\n  Function onDismiss;\r\n\r\n  @override\r\n  Widget build(\r\n    BuildContext context,\r\n    double shrinkOffset,\r\n    bool overlapsContent,\r\n  ) {\r\n    final progress = shrinkOffset / maxExtent;\r\n\r\n    return StatefulBuilder(builder: (context, setState) {\r\n      return Material(\r\n        child: Stack(\r\n          fit: StackFit.expand,\r\n          children: [\r\n            AnimatedOpacity(\r\n              duration: const Duration(milliseconds: 150),\r\n              opacity: progress,\r\n              child: ColoredBox(\r\n                color: Theme.of(context).primaryColor,\r\n              ),\r\n            ),\r\n            AnimatedOpacity(\r\n              duration: const Duration(milliseconds: 150),\r\n              opacity: 1 - progress,\r\n              child: CustomPaint(\r\n                painter: CustomToolbarShape(\r\n                  showBar: false,\r\n                ),\r\n              ),\r\n            ),\r\n            AnimatedContainer(\r\n              duration: const Duration(milliseconds: 100),\r\n              padding: EdgeInsets.lerp(\r\n                EdgeInsets.symmetric(horizontal: 16, vertical: 10),\r\n                EdgeInsets.only(bottom: 0),\r\n                progress,\r\n              ),\r\n              alignment: Alignment.lerp(\r\n                Alignment.bottomLeft,\r\n                Alignment.center,\r\n                progress,\r\n              ),\r\n              child: _search && progress < 0.2\r\n                  ? TextField(\r\n                      controller: searchController,\r\n                      style: Theme.of(context)\r\n                          .textTheme\r\n                          .headline5\r\n                          .copyWith(color: Colors.white),\r\n                      autofocus: true,\r\n                      cursorHeight: 30,\r\n                      showCursor: false,\r\n                      decoration: InputDecoration(\r\n                        isDense: true,\r\n                        isCollapsed: true,\r\n                        enabledBorder: InputBorder.none,\r\n                        focusedBorder: InputBorder.none,\r\n                        border: InputBorder.none,\r\n                        hintStyle:\r\n                            Theme.of(context).textTheme.headline5.copyWith(\r\n                                  color: Colors.white24,\r\n                                ),\r\n                        hintText: 'Arama',\r\n                      ),\r\n                    )\r\n                  : Text(\r\n                      'Filtrele',\r\n                      style: TextStyle.lerp(\r\n                        Theme.of(context)\r\n                            .textTheme\r\n                            .headline5\r\n                            .copyWith(color: Colors.white),\r\n                        Theme.of(context)\r\n                            .textTheme\r\n                            .headline6\r\n                            .copyWith(color: Colors.white),\r\n                        progress,\r\n                      ),\r\n                    ),\r\n            ),\r\n            AppBar(\r\n              toolbarHeight: 70,\r\n              backgroundColor: Colors.transparent,\r\n              leading: BackButton(),\r\n              actions: [\r\n                IconButton(\r\n                  icon: Icon(_search ? Icons.close : Icons.search),\r\n                  onPressed: () {\r\n                    setState(() {\r\n                      _search = !_search;\r\n                    });\r\n\r\n                    if (_search) {\r\n                      onDismiss();\r\n                    }\r\n                  },\r\n                ),\r\n                IconButton(\r\n                  icon: const Icon(Icons.add_circle_outline),\r\n                  onPressed: () {\r\n                    if (Provider.of<AuthProvider>(context, listen: false)\r\n                        .isLoggedIn()) {\r\n                      Navigator.of(context).push(MaterialPageRoute(\r\n                          builder: (_) => CreateClassifiedScreen()));\r\n                    } else {\r\n                      Navigator.of(context).push(\r\n                          MaterialPageRoute(builder: (_) => LoginScreen()));\r\n                    }\r\n                  },\r\n                ),\r\n              ],\r\n              elevation: 0,\r\n            )\r\n          ],\r\n        ),\r\n      );\r\n    });\r\n  }\r\n\r\n  @override\r\n  double get maxExtent => 150;\r\n\r\n  @override\r\n  double get minExtent => 70;\r\n\r\n  @override\r\n  bool shouldRebuild(covariant SliverPersistentHeaderDelegate oldDelegate) =>\r\n      true;\r\n}\r\n"
        }
    ]
}