{
    "sourceFile": "lib/view/screens/classified/classified_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1667404690800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667569433562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     this.districtIds,\r\n     this.neighborhoodIds,\r\n     this.landStatusIds,\r\n     this.usageStatusIds,\r\n-    this.categoryId,\r\n+    this.categoryIds,\r\n     this.minPrice,\r\n     this.maxPrice,\r\n     this.featured,\r\n     this.urgent,\r\n@@ -39,9 +39,9 @@\n   final List<int> districtIds;\r\n   final List<int> neighborhoodIds;\r\n   final List<int> landStatusIds;\r\n   final List<int> usageStatusIds;\r\n-  final int categoryId;\r\n+  final List<int> categoryIds;\r\n   final double minPrice;\r\n   final double maxPrice;\r\n   final int featured;\r\n   final int urgent;\r\n@@ -101,9 +101,9 @@\n                   districtIds: widget.districtIds,\r\n                   neighborhoodIds: widget.neighborhoodIds,\r\n                   landStatusIds: widget.landStatusIds,\r\n                   usageStatusIds: widget.usageStatusIds,\r\n-                  categoryId: widget.categoryId,\r\n+                  categoryIds: widget.categoryIds,\r\n                   minPrice: widget.minPrice,\r\n                   maxPrice: widget.maxPrice,\r\n                   featured: widget.featured,\r\n                   urgent: widget.urgent,\r\n@@ -150,9 +150,9 @@\n                       gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\r\n                         crossAxisCount: 2,\r\n                         crossAxisSpacing: 10,\r\n                         mainAxisSpacing: 10,\r\n-                        childAspectRatio: 0.75,\r\n+                        childAspectRatio: 0.7,\r\n                       ),\r\n                       padding: EdgeInsets.all(10),\r\n                       physics: NeverScrollableScrollPhysics(),\r\n                       shrinkWrap: true,\r\n@@ -202,13 +202,43 @@\n                                           EdgeInsets.fromLTRB(10, 10, 10, 0),\r\n                                       child: ClipRRect(\r\n                                           borderRadius:\r\n                                               BorderRadius.circular(5),\r\n-                                          child: LazyImage(\r\n-                                            fit: BoxFit.cover,\r\n-                                            //width: 110,\r\n-                                            url:\r\n-                                                '${AppConstants.BASE_URL}/storage/app/public/classifieds/${item.images.isNotEmpty ? item.images.first : ''}',\r\n+                                          child: Stack(\r\n+                                            fit: StackFit.expand,\r\n+                                            children: [\r\n+                                              LazyImage(\r\n+                                                fit: BoxFit.cover,\r\n+                                                //width: 110,\r\n+                                                url:\r\n+                                                    '${AppConstants.BASE_URL}/storage/app/public/classifieds/${item.images.isNotEmpty ? item.images.first : ''}',\r\n+                                              ),\r\n+                                              if (item.featured)\r\n+                                                Positioned(\r\n+                                                  child: Container(\r\n+                                                    decoration: BoxDecoration(\r\n+                                                      color: Color(0xffffd105)\r\n+                                                          .withOpacity(.9),\r\n+                                                      borderRadius:\r\n+                                                          BorderRadius.circular(\r\n+                                                              3),\r\n+                                                    ),\r\n+                                                    padding:\r\n+                                                        EdgeInsets.symmetric(\r\n+                                                      horizontal: 4,\r\n+                                                      vertical: 2,\r\n+                                                    ),\r\n+                                                    child: Text(\r\n+                                                      'ÖNE ÇIKAN',\r\n+                                                      style: TextStyle(\r\n+                                                        fontSize: 11,\r\n+                                                      ),\r\n+                                                    ),\r\n+                                                  ),\r\n+                                                  top: 6,\r\n+                                                  left: 4,\r\n+                                                )\r\n+                                            ],\r\n                                           )),\r\n                                     )),\r\n                                 SizedBox(\r\n                                   height: 14,\r\n@@ -224,66 +254,71 @@\n                                       ),\r\n                                     )),\r\n                                     child: Row(\r\n                                       children: [\r\n-                                        Padding(\r\n-                                            padding: const EdgeInsets.symmetric(\r\n-                                                horizontal: 12, vertical: 8),\r\n-                                            child: Column(\r\n-                                              crossAxisAlignment:\r\n-                                                  CrossAxisAlignment.start,\r\n-                                              mainAxisAlignment:\r\n-                                                  MainAxisAlignment\r\n-                                                      .spaceBetween,\r\n-                                              children: [\r\n-                                                Column(\r\n-                                                  crossAxisAlignment:\r\n-                                                      CrossAxisAlignment.start,\r\n-                                                  children: [\r\n-                                                    Text(\r\n-                                                      \"${formatter.format(item.price)}  TL\",\r\n-                                                      style: TextStyle(\r\n-                                                        fontSize: 15,\r\n-                                                        height: 1,\r\n-                                                        color:\r\n-                                                            Color(0xff545e60),\r\n-                                                        fontWeight:\r\n-                                                            FontWeight.w700,\r\n+                                        Expanded(\r\n+                                          child: Padding(\r\n+                                              padding:\r\n+                                                  const EdgeInsets.symmetric(\r\n+                                                      horizontal: 12,\r\n+                                                      vertical: 8),\r\n+                                              child: Column(\r\n+                                                crossAxisAlignment:\r\n+                                                    CrossAxisAlignment.start,\r\n+                                                mainAxisAlignment:\r\n+                                                    MainAxisAlignment\r\n+                                                        .spaceBetween,\r\n+                                                children: [\r\n+                                                  Column(\r\n+                                                    crossAxisAlignment:\r\n+                                                        CrossAxisAlignment\r\n+                                                            .start,\r\n+                                                    children: [\r\n+                                                      Text(\r\n+                                                        \"${formatter.format(item.price)}  TL\",\r\n+                                                        style: TextStyle(\r\n+                                                          fontSize: 15,\r\n+                                                          height: 1,\r\n+                                                          color:\r\n+                                                              Color(0xff545e60),\r\n+                                                          fontWeight:\r\n+                                                              FontWeight.w700,\r\n+                                                        ),\r\n                                                       ),\r\n+                                                      SizedBox(\r\n+                                                        height: 4,\r\n+                                                      ),\r\n+                                                      Text(\r\n+                                                        item.description,\r\n+                                                        maxLines: 2,\r\n+                                                        overflow: TextOverflow\r\n+                                                            .ellipsis,\r\n+                                                        style: TextStyle(\r\n+                                                            fontSize: 11,\r\n+                                                            height: 1.3,\r\n+                                                            color:\r\n+                                                                Colors.black54),\r\n+                                                      ),\r\n+                                                    ],\r\n+                                                  ),\r\n+                                                  SizedBox(\r\n+                                                    height: 8,\r\n+                                                  ),\r\n+                                                  Text(\r\n+                                                    item.district +\r\n+                                                        ', ' +\r\n+                                                        item.city,\r\n+                                                    maxLines: 1,\r\n+                                                    overflow:\r\n+                                                        TextOverflow.ellipsis,\r\n+                                                    style: TextStyle(\r\n+                                                      fontSize: 10,\r\n+                                                      color: Color(0xff545e60),\r\n                                                     ),\r\n-                                                    SizedBox(\r\n-                                                      height: 4,\r\n-                                                    ),\r\n-                                                    Text(\r\n-                                                      item.description,\r\n-                                                      maxLines: 2,\r\n-                                                      overflow:\r\n-                                                          TextOverflow.ellipsis,\r\n-                                                      style: TextStyle(\r\n-                                                          fontSize: 11,\r\n-                                                          height: 1.3,\r\n-                                                          color:\r\n-                                                              Colors.black54),\r\n-                                                    ),\r\n-                                                  ],\r\n-                                                ),\r\n-                                                SizedBox(\r\n-                                                  height: 8,\r\n-                                                ),\r\n-                                                Text(\r\n-                                                  item.district +\r\n-                                                      ', ' +\r\n-                                                      item.city,\r\n-                                                  maxLines: 1,\r\n-                                                  overflow:\r\n-                                                      TextOverflow.ellipsis,\r\n-                                                  style: TextStyle(\r\n-                                                    fontSize: 10,\r\n-                                                    color: Color(0xff545e60),\r\n                                                   ),\r\n-                                                ),\r\n-                                              ],\r\n-                                            )),\r\n+                                                ],\r\n+                                              )),\r\n+                                        ),\r\n                                       ],\r\n                                     ),\r\n                                   ),\r\n                                 )\r\n@@ -542,9 +577,9 @@\n             AnimatedOpacity(\r\n               duration: const Duration(milliseconds: 150),\r\n               opacity: progress,\r\n               child: ColoredBox(\r\n-                color: Theme.Theme.of(context).primaryColorryColor,\r\n+                color: Theme.of(context).primaryColor,\r\n               ),\r\n             ),\r\n             AnimatedOpacity(\r\n               duration: const Duration(milliseconds: 150),\r\n"
                }
            ],
            "date": 1667404690800,
            "name": "Commit-0",
            "content": "import 'dart:io';\r\n\r\nimport 'package:ainsighter/data/model/response/classified_model.dart';\r\nimport 'package:ainsighter/provider/auth_provider.dart';\r\nimport 'package:ainsighter/provider/classified_provider.dart';\r\nimport 'package:ainsighter/utill/app_constants.dart';\r\nimport 'package:ainsighter/view/base/custom_app_bar.dart';\r\nimport 'package:ainsighter/view/base/lazy_image.dart';\r\nimport 'package:ainsighter/view/screens/auth/login_screen.dart';\r\nimport 'package:ainsighter/view/screens/classified/classified_detail_screen.dart';\r\nimport 'package:ainsighter/view/screens/classified/create_classified_screen.dart';\r\nimport 'package:ainsighter/view/screens/classified/favourite_classified_screen.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:infinite_scroll_pagination/infinite_scroll_pagination.dart';\r\nimport 'package:intl/intl.dart';\r\nimport 'package:provider/provider.dart';\r\nimport 'package:url_launcher/url_launcher.dart';\r\n\r\nimport 'classified_filter_screen.dart';\r\n\r\nclass ClassifiedScreen extends StatefulWidget {\r\n  ClassifiedScreen({\r\n    this.cityId,\r\n    this.districtIds,\r\n    this.neighborhoodIds,\r\n    this.landStatusIds,\r\n    this.usageStatusIds,\r\n    this.categoryId,\r\n    this.minPrice,\r\n    this.maxPrice,\r\n    this.featured,\r\n    this.urgent,\r\n    this.keyword,\r\n    this.pageTitle,\r\n    this.message,\r\n  });\r\n\r\n  final int cityId;\r\n  final List<int> districtIds;\r\n  final List<int> neighborhoodIds;\r\n  final List<int> landStatusIds;\r\n  final List<int> usageStatusIds;\r\n  final int categoryId;\r\n  final double minPrice;\r\n  final double maxPrice;\r\n  final int featured;\r\n  final int urgent;\r\n  final String keyword;\r\n  final String pageTitle;\r\n  final String message;\r\n\r\n  @override\r\n  _ClassifiedScreenState createState() => _ClassifiedScreenState();\r\n}\r\n\r\nclass _ClassifiedScreenState extends State<ClassifiedScreen> {\r\n  ScrollController _scrollController = ScrollController();\r\n\r\n  Future _listFuture;\r\n\r\n  int _pageKey = 0;\r\n  static const _pageSize = 10;\r\n  bool _done = false;\r\n  bool _isFetching = false;\r\n\r\n  NumberFormat formatter = NumberFormat.decimalPattern('tr');\r\n\r\n  final PagingController<int, ClassifiedModel> _pagingController =\r\n      PagingController(firstPageKey: 0);\r\n\r\n  List<ClassifiedModel> _classifiedList = [];\r\n\r\n  @override\r\n  void initState() {\r\n    _listFuture = fetchPage(_pageKey);\r\n    super.initState();\r\n    if (widget.message != null) {\r\n      WidgetsBinding.instance.addPostFrameCallback((_) =>\r\n          ScaffoldMessenger.of(context)\r\n              .showSnackBar(SnackBar(content: Text(widget.message))));\r\n    }\r\n\r\n    _scrollController.addListener(() {\r\n      if (_scrollController.position.pixels ==\r\n              _scrollController.position.maxScrollExtent &&\r\n          !_done) {\r\n        setState(() {\r\n          _listFuture = fetchPage(_pageKey);\r\n          _isFetching = true;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  Future<List<ClassifiedModel>> fetchPage(int pageKey) async {\r\n    try {\r\n      final newItems =\r\n          await Provider.of<ClassifiedProvider>(context, listen: false)\r\n              .getClassifiedList(pageKey, _pageSize,\r\n                  cityId: widget.cityId,\r\n                  districtIds: widget.districtIds,\r\n                  neighborhoodIds: widget.neighborhoodIds,\r\n                  landStatusIds: widget.landStatusIds,\r\n                  usageStatusIds: widget.usageStatusIds,\r\n                  categoryId: widget.categoryId,\r\n                  minPrice: widget.minPrice,\r\n                  maxPrice: widget.maxPrice,\r\n                  featured: widget.featured,\r\n                  urgent: widget.urgent,\r\n                  keyword: widget.keyword);\r\n\r\n      _classifiedList.addAll(newItems);\r\n\r\n      print('ADET ' + newItems.length.toString());\r\n\r\n      if (newItems.length >= 10) {\r\n        _pageKey += newItems.length;\r\n      } else {\r\n        print('bitti');\r\n        _done = true;\r\n      }\r\n    } catch (error) {\r\n      print(\"error --> $error\");\r\n      _pagingController.error = error;\r\n    }\r\n    return _classifiedList;\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SafeArea(\r\n      child: Scaffold(\r\n        backgroundColor: Colors.white,\r\n        extendBodyBehindAppBar: true,\r\n        body: CustomScrollView(\r\n          controller: _scrollController,\r\n          slivers: [\r\n            SliverPersistentHeader(\r\n              pinned: true,\r\n              delegate: MyHeaderDelegate(\r\n                pageTitle: widget.pageTitle ?? 'İlanlar',\r\n              ),\r\n            ),\r\n            SliverToBoxAdapter(\r\n              child: FutureBuilder(\r\n                future: _listFuture,\r\n                builder: (context, snapshot) {\r\n                  if (snapshot.hasData && snapshot.data.isNotEmpty)\r\n                    return GridView.builder(\r\n                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\r\n                        crossAxisCount: 2,\r\n                        crossAxisSpacing: 10,\r\n                        mainAxisSpacing: 10,\r\n                        childAspectRatio: 0.75,\r\n                      ),\r\n                      padding: EdgeInsets.all(10),\r\n                      physics: NeverScrollableScrollPhysics(),\r\n                      shrinkWrap: true,\r\n                      itemCount: !_done\r\n                          ? snapshot.data.length + 1\r\n                          : snapshot.data.length,\r\n                      itemBuilder: (BuildContext context, int index) {\r\n                        if (snapshot.data.length == index && !_done)\r\n                          return Container(\r\n                              margin: EdgeInsets.only(top: 10),\r\n                              child: Center(\r\n                                  child: SizedBox(\r\n                                      height: 20,\r\n                                      width: 20,\r\n                                      child: CircularProgressIndicator())));\r\n                        ClassifiedModel item = snapshot.data[index];\r\n                        return InkWell(\r\n                          borderRadius: BorderRadius.circular(15),\r\n                          onTap: () {\r\n                            if (item.classifiedStatus == 0) {\r\n                              return;\r\n                            }\r\n                            Navigator.of(context).push(MaterialPageRoute(\r\n                                builder: (_) =>\r\n                                    ClassifiedDetailScreen(classifield: item)));\r\n                          },\r\n                          child: Container(\r\n                            padding: EdgeInsets.symmetric(\r\n                                horizontal: 0, vertical: 0),\r\n                            decoration: BoxDecoration(\r\n                              // color: Color(0xffe3e9e9),\r\n                              boxShadow: [\r\n                                BoxShadow(\r\n                                    color: Colors.grey.shade300,\r\n                                    spreadRadius: 1,\r\n                                    blurRadius: 15)\r\n                              ],\r\n                              color: Colors.white,\r\n                              borderRadius: BorderRadius.circular(0),\r\n                            ),\r\n                            child: Column(\r\n                              children: [\r\n                                Expanded(\r\n                                    flex: 5,\r\n                                    child: Padding(\r\n                                      padding:\r\n                                          EdgeInsets.fromLTRB(10, 10, 10, 0),\r\n                                      child: ClipRRect(\r\n                                          borderRadius:\r\n                                              BorderRadius.circular(5),\r\n                                          child: LazyImage(\r\n                                            fit: BoxFit.cover,\r\n                                            //width: 110,\r\n                                            url:\r\n                                                '${AppConstants.BASE_URL}/storage/app/public/classifieds/${item.images.isNotEmpty ? item.images.first : ''}',\r\n                                          )),\r\n                                    )),\r\n                                SizedBox(\r\n                                  height: 14,\r\n                                ),\r\n                                Expanded(\r\n                                  flex: 3,\r\n                                  child: Container(\r\n                                    decoration: BoxDecoration(\r\n                                        border: Border(\r\n                                      left: BorderSide(\r\n                                        width: 5,\r\n                                        color: Color(0xffedcf2f),\r\n                                      ),\r\n                                    )),\r\n                                    child: Row(\r\n                                      children: [\r\n                                        Padding(\r\n                                            padding: const EdgeInsets.symmetric(\r\n                                                horizontal: 12, vertical: 8),\r\n                                            child: Column(\r\n                                              crossAxisAlignment:\r\n                                                  CrossAxisAlignment.start,\r\n                                              mainAxisAlignment:\r\n                                                  MainAxisAlignment\r\n                                                      .spaceBetween,\r\n                                              children: [\r\n                                                Column(\r\n                                                  crossAxisAlignment:\r\n                                                      CrossAxisAlignment.start,\r\n                                                  children: [\r\n                                                    Text(\r\n                                                      \"${formatter.format(item.price)}  TL\",\r\n                                                      style: TextStyle(\r\n                                                        fontSize: 15,\r\n                                                        height: 1,\r\n                                                        color:\r\n                                                            Color(0xff545e60),\r\n                                                        fontWeight:\r\n                                                            FontWeight.w700,\r\n                                                      ),\r\n                                                    ),\r\n                                                    SizedBox(\r\n                                                      height: 4,\r\n                                                    ),\r\n                                                    Text(\r\n                                                      item.description,\r\n                                                      maxLines: 2,\r\n                                                      overflow:\r\n                                                          TextOverflow.ellipsis,\r\n                                                      style: TextStyle(\r\n                                                          fontSize: 11,\r\n                                                          height: 1.3,\r\n                                                          color:\r\n                                                              Colors.black54),\r\n                                                    ),\r\n                                                  ],\r\n                                                ),\r\n                                                SizedBox(\r\n                                                  height: 8,\r\n                                                ),\r\n                                                Text(\r\n                                                  item.district +\r\n                                                      ', ' +\r\n                                                      item.city,\r\n                                                  maxLines: 1,\r\n                                                  overflow:\r\n                                                      TextOverflow.ellipsis,\r\n                                                  style: TextStyle(\r\n                                                    fontSize: 10,\r\n                                                    color: Color(0xff545e60),\r\n                                                  ),\r\n                                                ),\r\n                                              ],\r\n                                            )),\r\n                                      ],\r\n                                    ),\r\n                                  ),\r\n                                )\r\n                              ],\r\n                            ),\r\n                          ),\r\n                        );\r\n                      },\r\n                    );\r\n                  else if (snapshot.hasData && snapshot.data.isEmpty)\r\n                    return Container(\r\n                      height: MediaQuery.of(context).size.height,\r\n                      padding:\r\n                          EdgeInsets.only(bottom: 150, right: 20, left: 20),\r\n                      child: Center(\r\n                        child: Column(\r\n                          mainAxisAlignment: MainAxisAlignment.center,\r\n                          children: [\r\n                            Icon(\r\n                              Icons.search,\r\n                              color: Colors.grey.shade400,\r\n                              size: 80,\r\n                            ),\r\n                            SizedBox(\r\n                              height: 20,\r\n                            ),\r\n                            Text(\r\n                              'Aranan kriterlere uygun hiç ilan bulunamadı.',\r\n                              textAlign: TextAlign.center,\r\n                              style: TextStyle(\r\n                                color: Colors.grey.shade500,\r\n                                fontSize: 18,\r\n                                height: 1.6,\r\n                              ),\r\n                            )\r\n                          ],\r\n                        ),\r\n                      ),\r\n                    );\r\n                  return Container(\r\n                      height: MediaQuery.of(context).size.height,\r\n                      padding: EdgeInsets.only(bottom: 150),\r\n                      child: Center(\r\n                          child: SizedBox(\r\n                              height: 20,\r\n                              width: 20,\r\n                              child: CircularProgressIndicator())));\r\n                },\r\n              ),\r\n              //     child: PagedListView<int, ClassifiedModel>(\r\n              //   padding: EdgeInsets.all(10),\r\n              //   pagingController: _pagingController,\r\n              //   builderDelegate: PagedChildBuilderDelegate<ClassifiedModel>(\r\n              //       noItemsFoundIndicatorBuilder: (context) => Padding(\r\n              //             padding: const EdgeInsets.all(16.0),\r\n              //             child: Center(\r\n              //               child: Column(\r\n              //                 mainAxisAlignment: MainAxisAlignment.center,\r\n              //                 children: [\r\n              //                   Icon(\r\n              //                     Icons.search,\r\n              //                     color: Colors.grey.shade400,\r\n              //                     size: 80,\r\n              //                   ),\r\n              //                   SizedBox(\r\n              //                     height: 20,\r\n              //                   ),\r\n              //                   Text(\r\n              //                     'Aranan kriterlere uygun hiç ilan bulunamadı.',\r\n              //                     textAlign: TextAlign.center,\r\n              //                     style: TextStyle(\r\n              //                       color: Colors.grey.shade500,\r\n              //                       fontSize: 18,\r\n              //                       height: 1.6,\r\n              //                     ),\r\n              //                   )\r\n              //                 ],\r\n              //               ),\r\n              //             ),\r\n              //           ),\r\n              //       itemBuilder: (context, item, index) {\r\n              //         return InkWell(\r\n              //           borderRadius: BorderRadius.circular(15),\r\n              //           onTap: () {\r\n              //             Navigator.of(context).push(MaterialPageRoute(\r\n              //                 builder: (_) =>\r\n              //                     ClassifiedDetailScreen(classifield: item)));\r\n              //           },\r\n              //           child: Container(\r\n              //             margin: EdgeInsets.all(6),\r\n              //             padding:\r\n              //                 EdgeInsets.symmetric(horizontal: 10, vertical: 10),\r\n              //             decoration: BoxDecoration(\r\n              //               // color: Color(0xffe3e9e9),\r\n              //               boxShadow: [\r\n              //                 BoxShadow(\r\n              //                     color: Colors.grey.shade300,\r\n              //                     spreadRadius: 1,\r\n              //                     blurRadius: 15)\r\n              //               ],\r\n              //               color: Colors.white,\r\n              //               borderRadius: BorderRadius.circular(15),\r\n              //             ),\r\n              //             child: Row(\r\n              //               children: [\r\n              //                 Expanded(\r\n              //                   child: ClipRRect(\r\n              //                       borderRadius: BorderRadius.circular(15),\r\n              //                       child: LazyImage(\r\n              //                         height: 110,\r\n              //                         fit: BoxFit.cover,\r\n              //                         url:\r\n              //                             '${AppConstants.BASE_URL}/storage/app/public/classifieds/${item.images.isNotEmpty ? item.images.first : ''}',\r\n              //                       )),\r\n              //                   flex: 4,\r\n              //                 ),\r\n              //                 SizedBox(\r\n              //                   width: 10,\r\n              //                 ),\r\n              //                 Expanded(\r\n              //                   child: Padding(\r\n              //                       padding: const EdgeInsets.all(8.0),\r\n              //                       child: Column(\r\n              //                         children: [\r\n              //                           Text(\r\n              //                             \"${formatter.format(item.price)}  ₺\",\r\n              //                             textAlign: TextAlign.center,\r\n              //                             style: TextStyle(\r\n              //                                 fontSize: 18,\r\n              //                                 color: Colors.black54,\r\n              //                                 fontWeight: FontWeight.bold),\r\n              //                           ),\r\n              //                           SizedBox(height: 4),\r\n              //                           Text(\r\n              //                             item.description,\r\n              //                             maxLines: 3,\r\n              //                             textAlign: TextAlign.center,\r\n              //                             overflow: TextOverflow.ellipsis,\r\n              //                             style: TextStyle(fontSize: 13),\r\n              //                           ),\r\n              //                         ],\r\n              //                       )),\r\n              //                   flex: 3,\r\n              //                 )\r\n              //               ],\r\n              //             ),\r\n              //           ),\r\n              //         );\r\n              //       }),\r\n              // )\r\n            ),\r\n          ],\r\n        ),\r\n        // body: Column(\r\n        //   children: [\r\n        //     Container(\r\n        //       width: MediaQuery.of(context).size.width,\r\n        //       height: 150,\r\n        //       child: CustomPaint(\r\n        //         painter: CustomToolbarShape(\r\n        //           circleWidth: 64.0,\r\n        //           showBar: false,\r\n        //         ),\r\n        //       ),\r\n        //     ),\r\n        //     Expanded(\r\n        //       child: ListView.separated(\r\n        //         padding: EdgeInsets.all(20),\r\n        //         shrinkWrap: true,\r\n        //         itemBuilder: (BuildContext context, int index) {\r\n        //           return Container(\r\n        //             padding: EdgeInsets.all(10),\r\n        //             decoration: BoxDecoration(\r\n        //               color: Color(0xffe0e5e8),\r\n        //               borderRadius: BorderRadius.circular(5),\r\n        //             ),\r\n        //             child: Row(\r\n        //               children: [\r\n        //                 Expanded(\r\n        //                   child: ClipRRect(\r\n        //                     borderRadius: BorderRadius.circular(10),\r\n        //                     child: Image.network(\r\n        //                       'https://picsum.photos/300/180',\r\n        //                       height: 110,\r\n        //                       fit: BoxFit.cover,\r\n        //                     ),\r\n        //                   ),\r\n        //                   flex: 4,\r\n        //                 ),\r\n        //                 Expanded(\r\n        //                   child: Padding(\r\n        //                       padding: const EdgeInsets.all(8.0),\r\n        //                       child: Column(\r\n        //                         children: [\r\n        //                           Text(\r\n        //                             '320.000 TL',\r\n        //                             textAlign: TextAlign.center,\r\n        //                             style: TextStyle(\r\n        //                                 fontSize: 18,\r\n        //                                 fontWeight: FontWeight.bold),\r\n        //                           ),\r\n        //                           SizedBox(height: 6),\r\n        //                           Text(\r\n        //                             'Bilgiler satır 1',\r\n        //                             style: TextStyle(fontSize: 13),\r\n        //                           ),\r\n        //                           Text(\r\n        //                             'Bilgiler satır 2',\r\n        //                             style: TextStyle(fontSize: 13),\r\n        //                           ),\r\n        //                           Text(\r\n        //                             'Bilgiler satır 3',\r\n        //                             style: TextStyle(fontSize: 13),\r\n        //                           ),\r\n        //                         ],\r\n        //                       )),\r\n        //                   flex: 3,\r\n        //                 )\r\n        //               ],\r\n        //             ),\r\n        //           );\r\n        //         },\r\n        //         separatorBuilder: (BuildContext context, int index) {\r\n        //           return SizedBox(\r\n        //             height: 10,\r\n        //           );\r\n        //         },\r\n        //         itemCount: 10,\r\n        //       ),\r\n        //     )\r\n        //   ],\r\n        // )\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\nclass MyHeaderDelegate extends SliverPersistentHeaderDelegate {\r\n  MyHeaderDelegate({this.pageTitle});\r\n  bool _search = false;\r\n  final String pageTitle;\r\n\r\n  @override\r\n  Widget build(\r\n    BuildContext context,\r\n    double shrinkOffset,\r\n    bool overlapsContent,\r\n  ) {\r\n    final progress = shrinkOffset / maxExtent;\r\n\r\n    return StatefulBuilder(builder: (context, setState) {\r\n      return Material(\r\n        child: Stack(\r\n          fit: StackFit.expand,\r\n          children: [\r\n            AnimatedOpacity(\r\n              duration: const Duration(milliseconds: 150),\r\n              opacity: progress,\r\n              child: ColoredBox(\r\n                color: Theme.Theme.of(context).primaryColorryColor,\r\n              ),\r\n            ),\r\n            AnimatedOpacity(\r\n              duration: const Duration(milliseconds: 150),\r\n              opacity: 1 - progress,\r\n              child: CustomPaint(\r\n                painter: CustomToolbarShape(\r\n                  showBar: false,\r\n                ),\r\n              ),\r\n            ),\r\n            AnimatedContainer(\r\n              duration: const Duration(milliseconds: 100),\r\n              padding: EdgeInsets.lerp(\r\n                EdgeInsets.symmetric(horizontal: 16, vertical: 10),\r\n                EdgeInsets.only(bottom: 0),\r\n                progress,\r\n              ),\r\n              alignment: Alignment.lerp(\r\n                Alignment.bottomLeft,\r\n                Alignment.center,\r\n                progress,\r\n              ),\r\n              child: _search && progress < 0.2\r\n                  ? TextField(\r\n                      style: Theme.of(context)\r\n                          .textTheme\r\n                          .headline5\r\n                          .copyWith(color: Colors.white),\r\n                      autofocus: true,\r\n                      cursorHeight: 30,\r\n                      showCursor: false,\r\n                      decoration: InputDecoration(\r\n                        isDense: true,\r\n                        isCollapsed: true,\r\n                        enabledBorder: InputBorder.none,\r\n                        focusedBorder: InputBorder.none,\r\n                        border: InputBorder.none,\r\n                        hintStyle:\r\n                            Theme.of(context).textTheme.headline5.copyWith(\r\n                                  color: Colors.white24,\r\n                                ),\r\n                        hintText: 'Arama',\r\n                      ),\r\n                    )\r\n                  : Text(\r\n                      pageTitle,\r\n                      style: TextStyle.lerp(\r\n                        Theme.of(context)\r\n                            .textTheme\r\n                            .headline5\r\n                            .copyWith(color: Colors.white),\r\n                        Theme.of(context)\r\n                            .textTheme\r\n                            .headline6\r\n                            .copyWith(color: Colors.white),\r\n                        progress,\r\n                      ),\r\n                    ),\r\n            ),\r\n            AppBar(\r\n              toolbarHeight: 70,\r\n              backgroundColor: Colors.transparent,\r\n              leading: BackButton(),\r\n              actions: [\r\n                IconButton(\r\n                  icon: const Icon(Icons.star),\r\n                  onPressed: () {\r\n                    if (Provider.of<AuthProvider>(context, listen: false)\r\n                        .isLoggedIn()) {\r\n                      Navigator.of(context).push(MaterialPageRoute(\r\n                          builder: (_) => FavouriteClassifiedScreen()));\r\n                    } else {\r\n                      Navigator.of(context).push(\r\n                          MaterialPageRoute(builder: (_) => LoginScreen()));\r\n                    }\r\n                  },\r\n                ),\r\n                IconButton(\r\n                  icon: Icon(_search ? Icons.close : Icons.search),\r\n                  onPressed: () {\r\n                    Navigator.of(context).push(MaterialPageRoute(\r\n                        builder: (_) => ClassifiedFilterScreen()));\r\n                    // setState(() {\r\n                    //   _search = !_search;\r\n                    // });\r\n                  },\r\n                ),\r\n                IconButton(\r\n                  icon: const Icon(Icons.add_circle_outline),\r\n                  onPressed: () {\r\n                    if (Provider.of<AuthProvider>(context, listen: false)\r\n                        .isLoggedIn()) {\r\n                      Navigator.of(context).push(MaterialPageRoute(\r\n                          builder: (_) => CreateClassifiedScreen()));\r\n                    } else {\r\n                      Navigator.of(context).push(\r\n                          MaterialPageRoute(builder: (_) => LoginScreen()));\r\n                    }\r\n                  },\r\n                ),\r\n              ],\r\n              elevation: 0,\r\n            )\r\n          ],\r\n        ),\r\n      );\r\n    });\r\n  }\r\n\r\n  @override\r\n  double get maxExtent => 150;\r\n\r\n  @override\r\n  double get minExtent => 70;\r\n\r\n  @override\r\n  bool shouldRebuild(covariant SliverPersistentHeaderDelegate oldDelegate) =>\r\n      true;\r\n}\r\n\r\nclass MySubHeaderDelegate extends SliverPersistentHeaderDelegate {\r\n  const MySubHeaderDelegate();\r\n\r\n  @override\r\n  Widget build(\r\n    BuildContext context,\r\n    double shrinkOffset,\r\n    bool overlapsContent,\r\n  ) {\r\n    return Container(\r\n      padding: EdgeInsets.symmetric(horizontal: 16),\r\n      height: 80,\r\n      color: Colors.white,\r\n      child: Row(\r\n        children: [\r\n          Expanded(\r\n            child: Text(\r\n              'Size özel ilanlar',\r\n              style: TextStyle(\r\n                  fontSize: 17,\r\n                  color: Colors.black87,\r\n                  fontWeight: FontWeight.w500),\r\n            ),\r\n          ),\r\n          ElevatedButton(onPressed: () {}, child: Text('Filtrele'))\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  @override\r\n  double get maxExtent => 60;\r\n\r\n  @override\r\n  double get minExtent => 60;\r\n\r\n  @override\r\n  bool shouldRebuild(covariant SliverPersistentHeaderDelegate oldDelegate) =>\r\n      true;\r\n}\r\n"
        }
    ]
}