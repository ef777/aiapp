{
    "sourceFile": "lib/view/screens/user/profile.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667404690007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667404690007,
            "name": "Commit-0",
            "content": "import 'dart:ui';\r\n\r\nimport 'package:ainsighter/data/model/response/userinfo_model.dart';\r\nimport 'package:ainsighter/provider/profile_provider.dart';\r\nimport 'package:ainsighter/utill/config.dart';\r\nimport 'package:ainsighter/utill/dimensions.dart';\r\nimport 'package:ainsighter/view/base/custom_app_bar.dart';\r\nimport 'package:ainsighter/view/base/custom_secondary_button.dart';\r\nimport 'package:ainsighter/view/base/custom_text_field.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:provider/provider.dart';\r\n\r\nclass ProfileScreen extends StatefulWidget {\r\n  @override\r\n  _ProfileScreenState createState() => _ProfileScreenState();\r\n}\r\n\r\nclass _ProfileScreenState extends State<ProfileScreen> {\r\n  TextEditingController _nameController = TextEditingController();\r\n  TextEditingController _emailController = TextEditingController();\r\n  TextEditingController _phoneController = TextEditingController();\r\n  TextEditingController _ibanController = TextEditingController();\r\n\r\n  FocusNode nameFocus = FocusNode();\r\n  FocusNode emailFocus = FocusNode();\r\n  FocusNode phoneFocus = FocusNode();\r\n  FocusNode ibanFocus = FocusNode();\r\n\r\n  bool _isLoading = false;\r\n\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n\r\n    Future.microtask(() async {\r\n      setState(() {\r\n        _isLoading = true;\r\n      });\r\n\r\n      await Provider.of<ProfileProvider>(context, listen: false)\r\n          .getUserInfo(context);\r\n\r\n      UserInfoModel user =\r\n          Provider.of<ProfileProvider>(context, listen: false).userInfoModel;\r\n\r\n      if (user != null) {\r\n        setState(() {\r\n          _nameController.text = user.name ?? '';\r\n          _emailController.text = user.email ?? '';\r\n          _phoneController.text = user.phone ?? '';\r\n          _ibanController.text = user.iban ?? '';\r\n          _isLoading = false;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return SafeArea(\r\n      child: Scaffold(\r\n          backgroundColor: Colors.white,\r\n          body: CustomScrollView(\r\n            physics: NeverScrollableScrollPhysics(),\r\n            slivers: [\r\n              SliverPersistentHeader(\r\n                pinned: true,\r\n                delegate: const MyHeaderDelegate(),\r\n              ),\r\n              SliverFillRemaining(\r\n                child: Container(\r\n                  padding: EdgeInsets.symmetric(horizontal: 10, vertical: 10),\r\n                  child: Column(\r\n                    children: [\r\n                      _isLoading\r\n                          ? Expanded(\r\n                              child: Center(\r\n                                child: CircularProgressIndicator(),\r\n                              ),\r\n                            )\r\n                          : Expanded(\r\n                              child: Column(\r\n                                crossAxisAlignment: CrossAxisAlignment.start,\r\n                                children: [\r\n                                  SizedBox(\r\n                                      height: Dimensions.PADDING_SIZE_SMALL),\r\n                                  //mobileNumber,email,gender\r\n                                  Column(\r\n                                    crossAxisAlignment:\r\n                                        CrossAxisAlignment.start,\r\n                                    children: [\r\n                                      // for first name section\r\n                                      CustomTextField(\r\n                                        hintText: 'İsim',\r\n                                        labelText: 'İsim',\r\n                                        isElevation: false,\r\n                                        isPadding: false,\r\n                                        controller: _nameController,\r\n                                        focusNode: nameFocus,\r\n                                        nextFocus: emailFocus,\r\n                                      ),\r\n\r\n                                      SizedBox(\r\n                                          height:\r\n                                              Dimensions.PADDING_SIZE_SMALL),\r\n                                      // for email section\r\n                                      CustomTextField(\r\n                                        hintText: 'E-posta',\r\n                                        labelText: 'E-posta',\r\n                                        isElevation: false,\r\n                                        isPadding: false,\r\n                                        controller: _emailController,\r\n                                        focusNode: emailFocus,\r\n                                        nextFocus: phoneFocus,\r\n                                        inputType: TextInputType.emailAddress,\r\n                                      ),\r\n\r\n                                      SizedBox(\r\n                                          height:\r\n                                              Dimensions.PADDING_SIZE_SMALL),\r\n                                      // for Phone Number section\r\n                                      CustomTextField(\r\n                                        hintText: 'Telefon Numarası',\r\n                                        labelText: 'Telefon Numarası',\r\n                                        isElevation: false,\r\n                                        isPadding: false,\r\n                                        controller: _phoneController,\r\n                                        focusNode: phoneFocus,\r\n                                        inputAction: TextInputAction.done,\r\n                                        inputType: TextInputType.phone,\r\n                                      ),\r\n\r\n                                      SizedBox(\r\n                                          height:\r\n                                              Dimensions.PADDING_SIZE_SMALL),\r\n\r\n                                      CustomTextField(\r\n                                        hintText: 'IBAN',\r\n                                        labelText: 'IBAN',\r\n                                        isElevation: false,\r\n                                        isPadding: false,\r\n                                        controller: _ibanController,\r\n                                        focusNode: ibanFocus,\r\n                                        inputAction: TextInputAction.done,\r\n                                        inputType: TextInputType.number,\r\n                                      ),\r\n                                      SizedBox(\r\n                                          height:\r\n                                              Dimensions.PADDING_SIZE_SMALL),\r\n                                    ],\r\n                                  ),\r\n                                ],\r\n                              ),\r\n                            ),\r\n                      Consumer<ProfileProvider>(\r\n                        builder: (context, prfl, child) =>\r\n                            CustomSecondaryButton(\r\n                          color: Config.PrimaryColor,\r\n                          text: 'Bilgileri Güncelle',\r\n                          isLoading: prfl.isLoading,\r\n                          onPress: () async {\r\n                            await Provider.of<ProfileProvider>(context,\r\n                                    listen: false)\r\n                                .updateUserInfo(context,\r\n                                    name: _nameController.text,\r\n                                    phone: _phoneController.text,\r\n                                    iban: _ibanController.text);\r\n                          },\r\n                        ),\r\n                      ),\r\n                    ],\r\n                  ),\r\n                ),\r\n              ),\r\n            ],\r\n          )),\r\n    );\r\n  }\r\n}\r\n\r\nclass MyHeaderDelegate extends SliverPersistentHeaderDelegate {\r\n  const MyHeaderDelegate();\r\n\r\n  @override\r\n  Widget build(\r\n    BuildContext context,\r\n    double shrinkOffset,\r\n    bool overlapsContent,\r\n  ) {\r\n    final progress = shrinkOffset / maxExtent;\r\n\r\n    return Material(\r\n      child: Stack(\r\n        fit: StackFit.expand,\r\n        children: [\r\n          AnimatedOpacity(\r\n            duration: const Duration(milliseconds: 150),\r\n            opacity: progress,\r\n            child: ColoredBox(\r\n              color: Theme.of(context).primaryColor,\r\n            ),\r\n          ),\r\n          AnimatedOpacity(\r\n            duration: const Duration(milliseconds: 150),\r\n            opacity: 1 - progress,\r\n            child: CustomPaint(\r\n              painter: CustomToolbarShape(\r\n                showBar: false,\r\n              ),\r\n            ),\r\n          ),\r\n          AnimatedContainer(\r\n            duration: const Duration(milliseconds: 100),\r\n            padding: EdgeInsets.lerp(\r\n              EdgeInsets.symmetric(horizontal: 16, vertical: 8),\r\n              EdgeInsets.only(bottom: 0),\r\n              progress,\r\n            ),\r\n            alignment: Alignment.lerp(\r\n              Alignment.bottomLeft,\r\n              Alignment.center,\r\n              progress,\r\n            ),\r\n            child: Text(\r\n              'Profil Bilgileri',\r\n              style: TextStyle.lerp(\r\n                Theme.of(context)\r\n                    .textTheme\r\n                    .headline5\r\n                    .copyWith(color: Colors.white),\r\n                Theme.of(context)\r\n                    .textTheme\r\n                    .headline6\r\n                    .copyWith(color: Colors.white),\r\n                progress,\r\n              ),\r\n            ),\r\n          ),\r\n          AppBar(\r\n            toolbarHeight: 70,\r\n            backgroundColor: Colors.transparent,\r\n            leading: BackButton(),\r\n            // actions: [\r\n            //   IconButton(\r\n            //     icon: const Icon(Icons.search),\r\n            //     onPressed: () {},\r\n            //   ),\r\n            //   IconButton(\r\n            //     icon: const Icon(Icons.more_vert),\r\n            //     onPressed: () {},\r\n            //   ),\r\n            // ],\r\n            elevation: 0,\r\n          ),\r\n        ],\r\n      ),\r\n    );\r\n  }\r\n\r\n  @override\r\n  double get maxExtent => 150;\r\n\r\n  @override\r\n  double get minExtent => 70;\r\n\r\n  @override\r\n  bool shouldRebuild(covariant SliverPersistentHeaderDelegate oldDelegate) =>\r\n      true;\r\n}\r\n"
        }
    ]
}