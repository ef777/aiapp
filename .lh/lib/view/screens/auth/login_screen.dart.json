{
    "sourceFile": "lib/view/screens/auth/login_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1667404689892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1667569434868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -181,25 +181,25 @@\n                                               });\n                                             }\n                                           }),\n \n-                                      SizedBox(height: 10),\n-\n-                                      CustomSecondaryButton(\n-                                        text: getTranslated(\n-                                            'forgot_password', context),\n-                                        color: Colors.transparent,\n-                                        textColor: Colors.grey.withOpacity(.8),\n-                                        isLoading: false,\n-                                        onPress: () {\n-                                          Navigator.of(context).pushNamed(\n-                                              RouteHelper.forgetPassword,\n-                                              arguments:\n-                                                  ForgotPasswordScreen());\n-                                        },\n-                                      ),\n+                                      // SizedBox(height: 10),\n+                                      //\n+                                      // CustomSecondaryButton(\n+                                      //   text: getTranslated(\n+                                      //       'forgot_password', context),\n+                                      //   color: Colors.transparent,\n+                                      //   textColor: Colors.grey.withOpacity(.8),\n+                                      //   isLoading: false,\n+                                      //   onPress: () {\n+                                      //     Navigator.of(context).pushNamed(\n+                                      //         RouteHelper.forgetPassword,\n+                                      //         arguments:\n+                                      //             ForgotPasswordScreen());\n+                                      //   },\n+                                      // ),\n                                       // for create an account\n-                                      SizedBox(height: 10),\n+                                      SizedBox(height: 30),\n                                     ],\n                                   )),\n                               InfoBox(\n                                 color: Colors.blueGrey.withOpacity(0.2),\n"
                }
            ],
            "date": 1667404689892,
            "name": "Commit-0",
            "content": "import 'package:ainsighter/helper/email_checker.dart';\nimport 'package:ainsighter/helper/route_helper.dart';\nimport 'package:ainsighter/localization/language_constrants.dart';\nimport 'package:ainsighter/provider/address_provider.dart';\nimport 'package:ainsighter/provider/auth_provider.dart';\nimport 'package:ainsighter/provider/profile_provider.dart';\nimport 'package:ainsighter/utill/config.dart';\nimport 'package:ainsighter/utill/dimensions.dart';\nimport 'package:ainsighter/view/base/custom_app_bar.dart';\nimport 'package:ainsighter/view/base/custom_navigation_bar.dart';\nimport 'package:ainsighter/view/base/custom_secondary_button.dart';\nimport 'package:ainsighter/view/base/custom_snackbar.dart';\nimport 'package:ainsighter/view/base/custom_text_field.dart';\nimport 'package:ainsighter/view/base/info_box.dart';\nimport 'package:ainsighter/view/screens/forgot_password/forgot_password_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter_svg/flutter_svg.dart';\nimport 'package:font_awesome_flutter/font_awesome_flutter.dart';\nimport 'package:lottie/lottie.dart';\nimport 'package:provider/provider.dart';\n\nclass LoginScreen extends StatefulWidget {\n  @override\n  _LoginScreenState createState() => _LoginScreenState();\n}\n\nclass _LoginScreenState extends State<LoginScreen> {\n  FocusNode _emailFocus = FocusNode();\n  FocusNode _passwordFocus = FocusNode();\n  TextEditingController _emailController;\n  TextEditingController _passwordController;\n  GlobalKey<FormState> _formKeyLogin;\n\n  @override\n  void initState() {\n    super.initState();\n    _formKeyLogin = GlobalKey<FormState>();\n    _emailController = TextEditingController();\n    _passwordController = TextEditingController();\n\n    _emailController.text =\n        Provider.of<AuthProvider>(context, listen: false).getUserNumber() ??\n            null;\n    _passwordController.text =\n        Provider.of<AuthProvider>(context, listen: false).getUserPassword() ??\n            null;\n  }\n\n  @override\n  void dispose() {\n    _emailController.dispose();\n    _passwordController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    Provider.of<AddressProvider>(context, listen: false).getCityList(context);\n    return SafeArea(\n      child: Scaffold(\n          resizeToAvoidBottomInset: false,\n          body: CustomScrollView(\n            physics: NeverScrollableScrollPhysics(),\n            slivers: [\n              SliverPersistentHeader(\n                pinned: true,\n                delegate: const MyHeaderDelegate(),\n              ),\n              SliverFillRemaining(\n                child: Consumer<AuthProvider>(\n                    builder: (context, authProvider, child) => Form(\n                          key: _formKeyLogin,\n                          child: Column(\n                            mainAxisAlignment: MainAxisAlignment.center,\n                            //  physics: BouncingScrollPhysics(),\n                            children: [\n                              Padding(\n                                  padding: EdgeInsets.all(\n                                      Dimensions.PADDING_SIZE_LARGE),\n                                  child: Column(\n                                    children: [\n                                      SizedBox(\n                                          height:\n                                              Dimensions.PADDING_SIZE_SMALL),\n                                      CustomTextField(\n                                        hintText: getTranslated(\n                                            'demo_gmail', context),\n                                        labelText: 'E-Posta',\n                                        isShowBorder: true,\n                                        prefixIconUrl: Icons.mail,\n                                        isShowPrefixIcon: true,\n                                        focusNode: _emailFocus,\n                                        nextFocus: _passwordFocus,\n                                        controller: _emailController,\n                                        inputType: TextInputType.emailAddress,\n                                      ),\n                                      SizedBox(\n                                          height:\n                                              Dimensions.PADDING_SIZE_SMALL),\n                                      CustomTextField(\n                                        labelText: 'Şifre',\n                                        hintText: getTranslated(\n                                            'password_hint', context),\n                                        isShowBorder: true,\n                                        isPassword: true,\n                                        isShowSuffixIcon: true,\n                                        prefixIconUrl: Icons.lock,\n                                        isShowPrefixIcon: true,\n                                        focusNode: _passwordFocus,\n                                        controller: _passwordController,\n                                        inputAction: TextInputAction.done,\n                                      ),\n                                      SizedBox(height: 20),\n\n                                      CustomSecondaryButton(\n                                          text: 'Giriş Yap',\n                                          color: Config.PrimaryColor,\n                                          isLoading: authProvider.isLoading,\n                                          onPress: () {\n                                            String _email =\n                                                _emailController.text.trim();\n                                            String _password =\n                                                _passwordController.text.trim();\n                                            if (_email.isEmpty) {\n                                              showCustomSnackBar(\n                                                  getTranslated(\n                                                      'enter_email_address',\n                                                      context),\n                                                  context);\n                                            } else if (EmailChecker.isNotValid(\n                                                _email)) {\n                                              showCustomSnackBar(\n                                                  getTranslated(\n                                                      'enter_valid_email',\n                                                      context),\n                                                  context);\n                                            } else if (_password.isEmpty) {\n                                              showCustomSnackBar(\n                                                  getTranslated(\n                                                      'enter_password',\n                                                      context),\n                                                  context);\n                                            } else if (_password.length < 6) {\n                                              showCustomSnackBar(\n                                                  getTranslated(\n                                                      'password_should_be',\n                                                      context),\n                                                  context);\n                                            } else {\n                                              authProvider\n                                                  .login(_email, _password)\n                                                  .then((status) async {\n                                                if (status.isSuccess) {\n                                                  if (authProvider\n                                                      .isActiveRememberMe) {\n                                                    authProvider\n                                                        .saveUserNumberAndPassword(\n                                                            _email, _password);\n                                                  } else {\n                                                    authProvider\n                                                        .clearUserNumberAndPassword();\n                                                  }\n\n                                                  await Provider.of<\n                                                              ProfileProvider>(\n                                                          context,\n                                                          listen: false)\n                                                      .getUserInfo(context);\n\n                                                  Navigator.of(context)\n                                                      .pushAndRemoveUntil(\n                                                          MaterialPageRoute(\n                                                              builder: (_) =>\n                                                                  CustomBottomNav()),\n                                                          (route) => false);\n                                                } else {\n                                                  showCustomSnackBar(\n                                                      'Giriş bilgilerinizi kontrol edin',\n                                                      context);\n                                                }\n                                              });\n                                            }\n                                          }),\n\n                                      SizedBox(height: 10),\n\n                                      CustomSecondaryButton(\n                                        text: getTranslated(\n                                            'forgot_password', context),\n                                        color: Colors.transparent,\n                                        textColor: Colors.grey.withOpacity(.8),\n                                        isLoading: false,\n                                        onPress: () {\n                                          Navigator.of(context).pushNamed(\n                                              RouteHelper.forgetPassword,\n                                              arguments:\n                                                  ForgotPasswordScreen());\n                                        },\n                                      ),\n                                      // for create an account\n                                      SizedBox(height: 10),\n                                    ],\n                                  )),\n                              InfoBox(\n                                color: Colors.blueGrey.withOpacity(0.2),\n                                text:\n                                    'Henüz üye değilsen, hemen üye olabilirsin.',\n                                textColor: Colors.blueGrey,\n                                onPress: () {\n                                  Navigator.of(context)\n                                      .pushNamed(RouteHelper.signUp);\n                                },\n                              ),\n                            ],\n                          ),\n                        )),\n              ),\n            ],\n          )),\n    );\n  }\n\n  Widget _buildHeaderDraw(BuildContext context) {\n    return Stack(\n      alignment: Alignment.topCenter,\n      children: [\n        SvgPicture.asset('assets/image/header.svg',\n            width: MediaQuery.of(context).size.width, fit: BoxFit.cover),\n        SvgPicture.asset('assets/image/logo.svg',\n            width: MediaQuery.of(context).size.width * .43, fit: BoxFit.cover)\n      ],\n    );\n  }\n}\n\nclass MyHeaderDelegate extends SliverPersistentHeaderDelegate {\n  const MyHeaderDelegate();\n\n  @override\n  Widget build(\n    BuildContext context,\n    double shrinkOffset,\n    bool overlapsContent,\n  ) {\n    final progress = shrinkOffset / maxExtent;\n\n    return Material(\n      child: Stack(\n        fit: StackFit.expand,\n        children: [\n          AnimatedOpacity(\n            duration: const Duration(milliseconds: 150),\n            opacity: progress,\n            child: ColoredBox(\n              color: Theme.of(context).primaryColor,\n            ),\n          ),\n          AnimatedOpacity(\n            duration: const Duration(milliseconds: 150),\n            opacity: 1 - progress,\n            child: CustomPaint(\n              painter: CustomToolbarShape(\n                showBar: false,\n              ),\n            ),\n          ),\n          AnimatedContainer(\n            duration: const Duration(milliseconds: 100),\n            padding: EdgeInsets.lerp(\n              EdgeInsets.symmetric(horizontal: 16, vertical: 16),\n              EdgeInsets.only(bottom: 0),\n              progress,\n            ),\n            alignment: Alignment.lerp(\n              Alignment.bottomLeft,\n              Alignment.center,\n              progress,\n            ),\n            child: Text(\n              'Giriş Yap',\n              style: TextStyle.lerp(\n                Theme.of(context)\n                    .textTheme\n                    .headline5\n                    .copyWith(color: Colors.white),\n                Theme.of(context)\n                    .textTheme\n                    .headline6\n                    .copyWith(color: Colors.white),\n                progress,\n              ),\n            ),\n          ),\n          AppBar(\n            backgroundColor: Colors.transparent,\n            toolbarHeight: 70,\n            // leading: BackButton(),\n            elevation: 0,\n            actions: [\n              InkWell(\n                borderRadius: BorderRadius.circular(5),\n                onTap: () {\n                  Navigator.of(context).push(\n                      MaterialPageRoute(builder: (_) => CustomBottomNav()));\n                },\n                child: Padding(\n                  padding: EdgeInsets.symmetric(horizontal: 10),\n                  child: Center(\n                    child: Row(\n                      children: [\n                        Text('Uygulamaya Git'),\n                        SizedBox(\n                          width: 8,\n                        ),\n                        Icon(\n                          Icons.login,\n                          color: Colors.white,\n                        ),\n                      ],\n                    ),\n                  ),\n                ),\n              ),\n              // IconButton(\n              //   onPressed: () {\n              //     Navigator.of(context).push(\n              //         MaterialPageRoute(builder: (_) => CustomBottomNav()));\n              //   },\n              //   icon: FaIcon(\n              //     FontAwesomeIcons.signInAlt,\n              //     color: Colors.white,\n              //   ),\n              // )\n            ],\n          ),\n        ],\n      ),\n    );\n  }\n\n  @override\n  double get maxExtent => 200;\n\n  @override\n  double get minExtent => 70;\n\n  @override\n  bool shouldRebuild(covariant SliverPersistentHeaderDelegate oldDelegate) =>\n      true;\n}\n"
        }
    ]
}