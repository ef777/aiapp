{
    "sourceFile": "lib/view/screens/auth/signup_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1667569434792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1667569434792,
            "name": "Commit-0",
            "content": "import 'package:ainsighter/helper/email_checker.dart';\nimport 'package:ainsighter/helper/responsive_helper.dart';\nimport 'package:ainsighter/helper/route_helper.dart';\nimport 'package:ainsighter/localization/language_constrants.dart';\nimport 'package:ainsighter/provider/auth_provider.dart';\nimport 'package:ainsighter/utill/color_resources.dart';\nimport 'package:ainsighter/utill/dimensions.dart';\nimport 'package:ainsighter/utill/images.dart';\nimport 'package:ainsighter/utill/styles.dart';\nimport 'package:ainsighter/view/base/custom_button.dart';\nimport 'package:ainsighter/view/base/custom_snackbar.dart';\nimport 'package:ainsighter/view/base/custom_text_field.dart';\nimport 'package:ainsighter/view/base/main_app_bar.dart';\nimport 'package:ainsighter/view/screens/auth/create_account_screen.dart';\nimport 'package:flutter/material.dart';\nimport 'package:provider/provider.dart';\n\nclass SignUpScreen extends StatefulWidget {\n  @override\n  _SignUpScreenState createState() => _SignUpScreenState();\n}\n\nclass _SignUpScreenState extends State<SignUpScreen> {\n  TextEditingController _emailController = TextEditingController();\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: ResponsiveHelper.isDesktop(context) ? MainAppBar() : null,\n      body: SafeArea(\n        child: Scrollbar(\n          child: SingleChildScrollView(\n            padding: EdgeInsets.all(Dimensions.PADDING_SIZE_LARGE),\n            physics: BouncingScrollPhysics(),\n            child: Center(\n              child: Container(\n                width: 1170,\n                child: Consumer<AuthProvider>(\n                  builder: (context, authProvider, child) => Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      SizedBox(height: 30),\n                      Center(\n                        child: Padding(\n                          padding: const EdgeInsets.all(15.0),\n                          child: Image.asset(\n                            Images.app_logo,\n                            height: MediaQuery.of(context).size.height / 4.5,\n                            fit: BoxFit.scaleDown,\n                          ),\n                        ),\n                      ),\n                      SizedBox(height: 20),\n                      Center(\n                          child: Text(\n                        getTranslated('signup', context),\n                        style: poppinsMedium.copyWith(\n                            fontSize: 24,\n                            color: ColorResources.getTextColor(context)),\n                      )),\n                      SizedBox(height: 35),\n                      Text(\n                        getTranslated('email', context),\n                        style: poppinsRegular.copyWith(\n                            color: ColorResources.getHintColor(context)),\n                      ),\n                      SizedBox(height: Dimensions.PADDING_SIZE_SMALL),\n                      CustomTextField(\n                        hintText: getTranslated('demo_gmail', context),\n                        isShowBorder: true,\n                        inputAction: TextInputAction.done,\n                        inputType: TextInputType.emailAddress,\n                        controller: _emailController,\n                      ),\n                      SizedBox(height: 6),\n                      Row(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          authProvider.verificationMessage.length > 0\n                              ? CircleAvatar(\n                                  backgroundColor:\n                                      Theme.of(context).primaryColor,\n                                  radius: 5)\n                              : SizedBox.shrink(),\n                          SizedBox(width: 8),\n                          Expanded(\n                            child: Text(\n                              authProvider.verificationMessage ?? \"\",\n                              style: Theme.of(context)\n                                  .textTheme\n                                  .headline2\n                                  .copyWith(\n                                    fontSize: Dimensions.FONT_SIZE_SMALL,\n                                    color: Theme.of(context).primaryColor,\n                                  ),\n                            ),\n                          )\n                        ],\n                      ),\n\n                      // for continue button\n                      SizedBox(height: 12),\n                      !authProvider.isPhoneNumberVerificationButtonLoading\n                          ? CustomButton(\n                              buttonText: getTranslated('continue', context),\n                              onPressed: () {\n                                String _email = _emailController.text.trim();\n                                if (_email.isEmpty) {\n                                  showCustomSnackBar(\n                                      getTranslated(\n                                          'enter_email_address', context),\n                                      context);\n                                } else if (EmailChecker.isNotValid(_email)) {\n                                  showCustomSnackBar(\n                                      getTranslated(\n                                          'enter_valid_email', context),\n                                      context);\n                                } else {\n                                  authProvider\n                                      .checkEmail(_email)\n                                      .then((value) async {\n                                    if (value.isSuccess) {\n                                      authProvider.updateEmail(_email);\n                                      if (value.message == 'active') {\n                                        // Navigator.of(context).pushNamed(\n                                        //   RouteHelper.getVerifyRoute('sign-up', _email),\n                                        //   arguments: VerificationScreen(emailAddress: _email, fromSignUp: true),\n                                        // );\n                                      } else {\n                                        Navigator.of(context).pushNamed(\n                                            RouteHelper.createAccount,\n                                            arguments: CreateAccountScreen());\n                                      }\n                                    }\n                                  });\n                                }\n                              },\n                            )\n                          : Center(\n                              child: CircularProgressIndicator(\n                                  valueColor: new AlwaysStoppedAnimation<Color>(\n                                      Theme.of(context).primaryColor))),\n\n                      // for create an account\n                      SizedBox(height: 10),\n                      InkWell(\n                        onTap: () => Navigator.pop(context),\n                        child: Padding(\n                          padding: const EdgeInsets.all(8.0),\n                          child: Row(\n                            mainAxisAlignment: MainAxisAlignment.center,\n                            children: [\n                              Text(\n                                getTranslated('already_have_account', context),\n                                style: poppinsRegular.copyWith(\n                                    fontSize: Dimensions.FONT_SIZE_SMALL,\n                                    color:\n                                        ColorResources.getHintColor(context)),\n                              ),\n                              SizedBox(width: Dimensions.PADDING_SIZE_SMALL),\n                              Text(\n                                getTranslated('login', context),\n                                style: poppinsMedium.copyWith(\n                                    fontSize: Dimensions.FONT_SIZE_SMALL,\n                                    color:\n                                        ColorResources.getTextColor(context)),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          ),\n        ),\n      ),\n    );\n  }\n}\n"
        }
    ]
}